Source: funk2
Section: science
Priority: optional
Maintainer: Bo Morgan <bo@mit.edu>
Build-Depends:
 debhelper (>= 7),
 zlib1g-dev,
 libx11-dev,
 libxmlrpc-c3-dev,
 libcurl4-openssl-dev,
 libgtk2.0-dev,
 libavcodec-dev,
 libswscale-dev,
 libncurses5-dev
Standards-Version: 3.8.0
Homepage: http://funk2.org/

Package: funk2
Architecture: any
Depends:
 ${shlibs:Depends},
 ${misc:Depends}
Description: reflective programming language
 Funk2 is a novel programming language that supports "Causal Reflective
 Programming." The language is based on a peer-to-peer shared memory
 system, allowing access to large numbers of processors and memory.
 Funk2 uses a virtual scheduler, processor, and thread model that is
 based on top of the shared memory system, while taking advantage of the
 specific number of processor cores on each machine and using POSIX
 threads to implement virtual processors.  Funk2 includes a very simple
 and abstract data and syntax representation--inspired by lisp and
 scheme and compiles to bytecode that may be shared between
 architectures. 
 .
 Funk2's has a unique ability to keep track of everything that it does,
 which uses a lot of memory when used indiscreetly, but in general
 allows reflective tracing for causal reasons why bugs occur. Other
 reflective features of the language include an event-based
 inter-process communication system that works across the peer-to-peer
 network, inspired by the Erlang model. Funk2 is useful in social,
 iterative, cooperative design environments and for large distributed
 complex control systems. Its applications are inspired by Marvin
 Minsky's, Emotion Machine layered control algorithm for a Society of
 Mind.
 .
 Examples of the most basic computational features include: (1) memory
 creation, (2) memory read, and (3) memory write. Tracing all causal
 relationships between these basic features allows tracing the context
 of all other programmer-defined semantic abstractions. All of these
 computational features create an intricate trace network of
 dependencies, automatically traceable and shared by many parallel
 threads of execution. Funk2 allows causal tracing to occur modularly
 to dynamically chosen parts of large commonsense-scale artificial
 intelligence projects. The resulting causal dependency trace networks
 can be processed by critical causal reflection threads.
