'Copyright (c) 2007-2011 Bo Morgan.
 All rights reserved.
 
 Author: Bo Morgan
 
 Permission to use, copy, modify and distribute this software and its
 documentation is hereby granted, provided that both the copyright
 notice and this permission notice appear in all copies of the
 software, derivative works or modified versions, and any portions
 thereof, and that both notices appear in supporting documentation.
 
 BO MORGAN ALLOWS FREE USE OF THIS SOFTWARE IN ITS "AS IS" CONDITION.
 BO MORGAN DISCLAIMS ANY LIABILITY OF ANY KIND FOR ANY DAMAGES
 WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
 
 Bo Morgan requests users of this software to return to bo@mit.edu any
 improvements or extensions that they make and grant Bo Morgan the
 rights to redistribute these changes.'



[defunk em_two_about-content []
  [string-prog '<h1>About</h1>'
	       ''
	       '<p><strong>Moral Compass</strong> is a free, open, cognitive architecture designed for the scientific study of social and moral cognition.  '
	       'This project is developed by the <a href=http://rct.media.mit.edu/rct>Reflective Commonsense Thinking</a> group at the <a href=http://www.media.mit.edu>MIT Media Lab</a>.'
	       'The Moral Compass architecture is grounded in a rigid-body physical simulation environment, where multiple simulated children interact in a kitchen environment under the supervision of a simulated parent.'
	       ''
	       '<h2>Publications</h2>'
	       ''
	       '<ul>'
	       '  <li><a href="http://neuromin.de/rct/morgan2009-funk2__a_distributed_processing_language_for_reflective_tracing_of_a_large_critic_selector_cognitive_architecture.pdf">Morgan, B.; "Funk2: A Distributed Processing Language for Reflective Tracing of a Large Critic-Selector Cognitive Architecture"; Proceedings of the Metacognition Workshop at the Third IEEE International Conference on Self-Adaptive and Self-Organizing Systems; San Francisco, California, USA; 2009 September</a></li>'
	       '  <li><a href="http://neuromin.de/rct/morgan2009-funk2_memory-draft.pdf">Morgan, B.; "Funk2: A Frame-based Programming Language with Causally Reflective Capabilities"; Technical Note; Massachusetts Institute of Technology; 2009 May</a></li>'
	       '</ul>'
	       ''
	       '<h2>Presentations</h2>'
	       ''
	       '<ul>'
	       '  <li><a href="http://neuromin.de/rct/funk2_trust_presentation.html">Morgan, B.; "Funk2 Trust Presentation online Movie, PDF, and Transcript."; Research Presentation; Massachusetts Institute of Technology; 2008 April</a></li>'
	       '  <li><a href="http://neuromin.de/rct/2008_01_13-resenv-causal_reflection_programming.pdf">Morgan, B.; "Funk2: Causal Reflective Programming"; Research Presentation; Massachusetts Institute of Technology; 2008 January</a></li>'
	       '</ul>'
	       ''
	       ]]

[defunk em_two_about [context]
  [htmldoc_page context
		[em_two_about-content]]]


[defunk em_two_news-content [context]
  [get context all_posts_content]]

[defunk em_two_news [context]
  [htmldoc_page context
		[em_two_news-content context]]]


[defunk em_two_documentation-content [context]
  [string-prog '<h1>Documentation</h1>'
	       ''
	       [get context documentation_overview_content]]]

[defunk em_two_documentation [context]
  [htmldoc_page context
		[em_two_documentation-content context]]]


[defunk em_two_download-content []
  [string-prog '<h1>Download</h1>'
	       ''
	       '<h2>Binary and Source Packages</h2>'
	       ''
	       '<p>The following is a direct link to the latest version of platform independent source code, which compiles and runs cleanly on Linux, MacOSX, and Windows (under CygWin):</p>'
	       '  <ul>'
	       '    <li><a href="/version/funk2-2.11.0.2010.05.04/funk2-2.11.0.2010.05.04.tar.gz">Latest Architecture and Platform Independent Source Code (version 2.11.0.2010.05.04)</a></li>'
	       '  </ul>'
	       ''
	       '<p>The following table includes direct links to the latest architecture and platform specific binary packages. In most situations, you should be able to simply single-click on the appropriate link in order for your operating system to fully install the latest version of Funk2.</p>'
	       '  <ul>'
	       '    <li><a href="/arch/i386/funk2_2.11.0.2010.04.20_i386.deb">Debian Sid i386 binary package (version 2.11.0.2010.04.20)</a></li>'
	       '    <li><a href="/arch/amd64/funk2_2.11.0.2010.04.20_amd64.deb">Debian Sid amd64 binary package (version 2.11.0.2010.04.20)</a></li>'
	       '    <li><a href="/version/funk2-2.11.0.2010.05.02/funk2_2.11.0.2010.05.02_i386_macosx_10.6.3_darwin_10.3.0.pkg.tar.gz">MacOS X 10.6.3 Darwin Kernel 10.3.0 i386 binary package (version 2.11.0.2010.05.02)</a></li>'
	       '    <li><a href="/version/funk2-2.11.0.2010.05.03/funk2_2.11.0.2010.05.03_i386_macosx_10.5.8_darwin_9.8.0.pkg.tar.gz">MacOS X 10.5.8 Darwin Kernel 9.8.0 i386 binary package (version 2.11.0.2010.05.03)</a></li>'
	       '  </ul>'
	       ''
	       '<p>All Funk2 packages are signed with a public key, which is available here for your security:</p>'
	       '  <ul>'
	       '    <li><a href="/bo-2010_01_02.pub">Public Key for Bo Morgan <bo@mit.edu> (most recent)</a></li>'
	       '    <li><a href="/bo-2009_01_01.pub">Public Key for Bo Morgan <bo@mit.edu> (for older packages released before 2010)</a></li>'
	       '  </ul>'
	       ''
	       [prog '<p>All of the above Funk2 source tarballs and binary packages as well as all other previous versions are available here:</p>'
		     '  <ul>'
		     '    <li><a href="http://funk2.neuromin.de/">Funk2 HTTP File Server</a></li>'
		     '  </ul>'
		     '']
	       '<p>Funk2 is developed with the Git subversioning system. Here are some public Git versioning resources:</p>'
	       '  <ul>'
	       '    <li><a href="http://git.neuromin.de/">Funk2 GitWeb Server</a></li>'
	       '  </ul>'
	       ''
	       '<h2>Public Git Access</h2>'
	       ''
	       'This project is now a publicly developed project hosted via gitosis and gitweb at http://git.neuromin.de/, where you should have both access to stable packages and the trunk source repository. To clone the public git Funk2 repository on your machine, you should be able to just type the following command into a terminal:'
	       ''
	       '  <ul>'
	       '    <li><tt>git clone git://neuromin.de/funk2.git</tt></li>'
	       '  </ul>'
	       '']]

[defunk em_two_download [context]
  [htmldoc_page context
		[em_two_download-content]]]


[defunk em_two-generate_all_posts []
  `[,[let [[this [new htmldoc_post]]]
       [set this title       'Welcome to the Moral Compass Website!']
       [set this date        'March 13th, 2011']
       [set this author      'Bo Morgan']
       [set this author_link 'http://rct.media.mit.edu/rct/bo_morgan.html']
       [set this entry       [string-prog '<p><strong>Moral Compass</strong> is a free, open, cognitive architecture designed for social commonsense reasoning algorithms.  '
					  'This project is developed by the <a href=http://rct.media.mit.edu/rct>Reflective Commonsense Thinking</a> group at the <a href=http://www.media.mit.edu>MIT Media Lab</a>.'
					  'Moral Compass is primarily meant as a cognitive science research tool for testing hypothesis for social reasoning, including cooperative and non-cooperative behavior.']]
       this]
    ]]

[defunk em_two-generate_all_examples []
  `[]]

[defunk em_two-documentation-all_packages []
  `[movie
    isis_visual_object
    deliberative_execution_agency
    builtin_reactive_neural_plug_agency
    forgetful_event_stream
    semantic_resource_action_event
    isis_world_demo
    isismon_knowledge
    semantic_object_type
    semantic_temporal_object
    isis_world_client
    traced_resource
    mental_layer
    self_conscious_layer
    moral_compass_perception
    semantic_causal_object
    semantic_knowledge_base
    graph_isomorphism
    semantic_action_event
    image_sequence
    meta_semantic_knowledge_base
    deliberative_layer
    conceptnet
    mind
    self_conscious_imprimer_agency
    image
    agent_body
    graph_match_error_correcting
    divisi2
    isismon_learned_reactive_physical_activator
    semantic_ordered_object
    graph_cluster 
    learned_reactive_physical_knowledge_agency
    semantic_resource
    semantic_resource_action_sequence
    graph_match
    learned_reactive_language_agency
    learned_reactive_physical_agency
    isismon
    semantic_event_sequence
    self_reflective_layer
    moral_agent_body
    moral_compass
    timeline
    moral_compass_visual_agent
    moral_compass_visual_object
    reflective_credit_assignment_agency
    semantic_packable_object
    self_reflective_meta_mental_knowledge_agency
    isis_visual_agent
    event_stream
    isismon_agent
    isismon_core
    mindmon
    semantic_physical_object
    traced_mind
    moral_compass_proprioceptual_object
    agency
    builtin_reactive_physical_agency
    semantic_event
    semantic_agent
    semantic_frame
    semantic_object
    semantic_realm
    reflective_layer
    deliberative_meta_physical_knowledge_agency
    semantic_containment_object 
    semantic_relationship_key
    builtin_reactive_sensory_agency
    semantic_visual_object
    resource
    semantic_directed_action_event
    semantic_causal_event
    self_reflective_other_agents_knowledge_agency
    learned_reactive_layer 
    isismon_builtin_reactive_physical_activator
    learned_reactive_sensory_agency
    builtin_reactive_layer
    physical_world
    propogator]]


[defunk compile_em_two_css [context]
  [have [htmldoc_css context] save [string-concat [get context root_dir] 'default.css']]]

[defunk compile_em_two_root_page [context]
  [have [htmldoc_redirect_page 'news/'] save [string-concat [get context root_dir] 'index.html']]]


[defunk compile_em_two_documentation [context]
  [have context require_documentation_packages]
  [have context compile_documentation]
  nil]

[defunk compile_em_two_images [context]
  [shelter [mkdir [string-concat [get context root_dir] 'images/']]]
  [system [string-concat 'cp -f example/em_two_webpage/images/favicon.ico ' [get context root_dir]]]
  [let [[image_names `['img01.jpg'
		       'img02.jpg'
		       'left_logo_header.jpg'
		       'right_logo_header.jpg']]]
    [mapc [funk [image_name]
		[system [string-concat 'cp -f example/em_two_webpage/images/' image_name ' ' [get context root_dir] 'images/']]]
	  image_names]]
  nil]



[defunk compile_em_two_webpage [context]
  [print 'compiling em_two css']           [compile_em_two_css           context]
  [print 'compiling em_two root page']     [compile_em_two_root_page     context]
  [print 'compiling em_two tabs']          [have context compile_tabs]
  [print 'compiling em_two documentation'] [compile_em_two_documentation context]
  [print 'compiling em_two examples']      [have context compile_examples]
  [print 'compiling em_two images']        [compile_em_two_images        context]
  [print 'done compiling']
  nil]]

[let [[context [new htmldoc_context '/home/neptune/Desktop/www/em-two/']]]
  [set  context hostname                               'em-two.net']
  [set  context title                                  'Moral Compass']
  [set  context subtitle                               'Commonsense Social Reasoning Cognitive Architecture']
  [set  context posts                                  [em_two-generate_all_posts]]
  [set  context examples                               [em_two-generate_all_examples]]
  [set  context documentation_packages                 [em_two-documentation-all_packages]]
  [set  context documentation_objects                  [system-type_names]]
  [set  context background_color                       '#FFFFFF']
  [set  context font_color                             '#000000']
  [set  context link_color                             '#0000FF']
  [set  context logo_primary_font_color                '#000000']
  [set  context logo_secondary_font_color              '#000000']
  [set  context logo_link_font_color                   '#000000']
  [set  context menu_link_right_border_color           '#DDDDDD']
  [set  context menu_link_color                        '#0000FF']
  [set  context page_background_color                  '#FFFFFF']
  [set  context latest_post_border_color               '#DDDDDD']
  [set  context content_title_link_color               '#0000FF']
  [set  context content_title_link_bottom_border_color '#DDDDDD']
  [set  context content_byline_bottom_border_color     '#DDDDDD']
  [set  context content_links_background_color         '#FFFFFF']
  [set  context sidebar_list_divider_color             '#DDDDDD']
  [set  context sidebar_background_color               '#FFFFFF']
  [set  context sidebar_font_color                     '#000000']
  [set  context sidebar_link_color                     '#0000FF']
  [set  context footer_top_border_color                '#DDDDDD']
  [set  context footer_font_color                      '#000000']
  [set  context footer_link_color                      '#0000FF']
  [set  context search_background_color                '#FFFFFF']
  [set  context search_border_color                    '#DDDDDD']
  [set  context search_active_border_color             '#DDDDDD']
  [set  context search_font_color                      '#000000']
  [set  context search_link_color                      '#0000FF']
  [set  context search_visited_link_color              '#0000FF']
  [set  context search_hover_link_color                '#0000FF']
  [set  context search_active_link_color               '#0000FF']
  [set  context search_url_color                       '#000000']
  [have context add_tab          [new htmldoc_tab `About         &em_two_about]]
  [have context add_tab          [new htmldoc_tab `News          &em_two_news]]
  [have context add_tab          [new htmldoc_tab `Documentation &em_two_documentation]]
  [have context add_tab          [new htmldoc_tab `Download      &em_two_download]]
  
  [defunk em_two_webpage-save       []                                                         [compile_em_two_webpage       context]]
  [defunk em_two_css-save           []                                                         [compile_em_two_css           context]]
  [defunk em_two_about-save         [] [have [get context tab `About]         compile context]]
  [defunk em_two_news-save          [] [have [get context tab `News]          compile context]]
  [defunk em_two_documentation-save [] [have [get context tab `Documentation] compile context] [compile_em_two_documentation context]]
  [defunk em_two_download-save      [] [have [get context tab `Download]      compile context]]
  [defunk em_two_examples-save      [] [have context compile_examples]]
  [defunk em_two_images-save        []                                                         [compile_em_two_images        context]]
  
  ]

