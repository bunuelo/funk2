'Copyright (c) 2007-2010 Bo Morgan.
 All rights reserved.
 
 Author: Bo Morgan
 
 Permission to use, copy, modify and distribute this software and its
 documentation is hereby granted, provided that both the copyright
 notice and this permission notice appear in all copies of the
 software, derivative works or modified versions, and any portions
 thereof, and that both notices appear in supporting documentation.
 
 BO MORGAN ALLOWS FREE USE OF THIS SOFTWARE IN ITS "AS IS" CONDITION.
 BO MORGAN DISCLAIMS ANY LIABILITY OF ANY KIND FOR ANY DAMAGES
 WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
 
 Bo Morgan requests users of this software to return to bo@mit.edu any
 improvements or extensions that they make and grant Bo Morgan the
 rights to redistribute these changes.'


[deframe isis_world [physical_world] [client]
  [new [client]
       [construct physical_world]
       [set this client client]
       [let [[scenario_list        [isis-call client meta_list_scenarios]]
	     [load_scenario_result [isis-call client meta_load_scenario scenario 'make_toast']]
	     [task_list            [isis-call client meta_list_tasks]]
	     [load_task_result     [isis-call client meta_load_task task 'toaster is in view']]
	     [train_result         [isis-call client meta_train]]
	     [pause_result         [isis-call client meta_pause]]]
	 [terminal_format standard-terminal '\n  scenarios...................: ' scenario_list]
	 [terminal_format standard-terminal '\n  load make_toast scenario....: ' load_scenario_result]
	 [terminal_format standard-terminal '\n  tasks.......................: ' task_list]
	 [terminal_format standard-terminal '\n  load toaster is in view task: ' load_task_result]
	 [terminal_format standard-terminal '\n  train.......................: ' train_result]
	 [terminal_format standard-terminal '\n  pause.......................: ' pause_result]
	 ]
       this]]

[deftypefunk isis_world execute user_activate [agent_name layer_name agency_name resource_name :rest args]
  [set [get [get this agent_mind agent_name] agency layer_name agency_name] user_activate_resource resource_name]
  [set [get [get this agent_mimd agent_name] agency layer_name agency_name] user_activate_args     args]]

[deftypefunk isis_world get agent_says [agent_name]
  [get [get this agent_body agent_name] says]]

[deftypefunk isis_world execute sense_world [agent_name]
  [let [[sense [isis-call [get this client] sense agent agent_name]]]
    `[let [[agent_frame [frame]]]
       [mapc [funk [sense_agent_name]
		   [if [not [eq agent_name sense_agent_name]]
		       [have agent_frame add sense_agent_name [frame distance       15.0
								     recent_actions nil
								     says           [get this agent_says sense_agent_name]]]]]
	     [get this agent_names]]
       [have sense add `agents agent_frame]]
     sense]]

[deftypefunk isis_world get screenshot []
  [let [[screenshot_frame [isis-call [get this client] meta_screenshot max_x 320 max_y 240 x_offset 0 y_offset 0]]]
    [let [[width            [have screenshot_frame lookup `width]]
	  [height           [have screenshot_frame lookup `height]]
	  [rgb_data         [have screenshot_frame lookup `rgb_data]]
	  [reduction_factor [have screenshot_frame lookup `reduction_factor]]]
      [let [[actual_width  [* reduction_factor width]]
	    [actual_height [* reduction_factor height]]]
	[print [frame actual_width actual_width actual_height actual_height]]
	[let [[initial_image [image-new_from_rgb_data width height rgb_data]]]
	  [if [== reduction_factor 1]
	      initial_image
	    [let [[actual_image [new image actual_width actual_height nil]]]
	      [have actual_image write_reduction_image_part initial_image reduction_factor 0 0]
	      [dotimes [x_offset reduction_factor]
		[dotimes [y_offset reduction_factor]
		  [if [or [not [== x_offset 0]] [not [== y_offset 0]]]
		      [let [[reduced_screenshot_frame [isis-call [get this client] meta_screenshot max_x 320 max_y 240 x_offset x_offset y_offset y_offset]]]
			[let [[reduced_width            [have reduced_screenshot_frame lookup `width]]
			      [reduced_height           [have reduced_screenshot_frame lookup `height]]
			      [reduced_rgb_data         [have reduced_screenshot_frame lookup `rgb_data]]
			      [reduced_reduction_factor [have reduced_screenshot_frame lookup `reduction_factor]]]
			  [let [[reduced_image [image-new_from_rgb_data reduced_width reduced_height reduced_rgb_data]]]
			    [have actual_image write_reduction_image_part reduced_image reduction_factor x_offset y_offset]]]]]]]
	      actual_image]]]]]]]

[deftypefunk isis_world execute step_simulation [seconds]
  [isis-call [get this client] meta_step seconds seconds]
  [have this step_physical_world]]

[deftypefunk isis_world execute normal_step []
  [have this step_simulation 0.15]]

[deftypefunk isis_world execute mini_step []
  [have this step_simulation 0.02]]


'isis_world agent specific control functions'

[deftypefunk isis_world execute turn_right-start        [agent]               [isis-call [get this client] turn_right-start        agent agent]]
[deftypefunk isis_world execute turn_right-stop         [agent]               [isis-call [get this client] turn_right-stop         agent agent]]
[deftypefunk isis_world execute turn_left-start         [agent]               [isis-call [get this client] turn_left-start         agent agent]]
[deftypefunk isis_world execute turn_left-stop          [agent]               [isis-call [get this client] turn_left-stop          agent agent]]
[deftypefunk isis_world execute move_forward-start      [agent]               [isis-call [get this client] move_forward-start      agent agent]]
[deftypefunk isis_world execute move_forward-stop       [agent]               [isis-call [get this client] move_forward-stop       agent agent]]
[deftypefunk isis_world execute drop_from_right_hand    [agent]               [isis-call [get this client] drop_from_right_hand    agent agent]]
[deftypefunk isis_world execute drop_from_left_hand     [agent]               [isis-call [get this client] drop_from_left_hand     agent agent]]
[deftypefunk isis_world execute pick_up_with_left_hand  [agent target]        [isis-call [get this client] pick_up_with_left_hand  agent agent target target]]
[deftypefunk isis_world execute pick_up_with_right_hand [agent target]        [isis-call [get this client] pick_up_with_right_hand agent agent target target]]
[deftypefunk isis_world execute use_right_hand          [agent target object] [isis-call [get this client] use_right_hand          agent agent target target object object]]
[deftypefunk isis_world execute use_left_hand           [agent target object] [isis-call [get this client] use_left_hand           agent agent target target object object]]
[deftypefunk isis_world execute say                     [agent message]       [isis-call [get this client] say                     agent agent message message]]
[deftypefunk isis_world execute sense_retina_image      [agent]               [isis-call [get this client] sense_retina_image      agent agent max_x 320 max_y 240 x_offset 0 y_offset 0]]

