'Copyright (c) 2007-2011 Bo Morgan.
 All rights reserved.
 
 Author: Bo Morgan
 
 Permission to use, copy, modify and distribute this software and its
 documentation is hereby granted, provided that both the copyright
 notice and this permission notice appear in all copies of the
 software, derivative works or modified versions, and any portions
 thereof, and that both notices appear in supporting documentation.
 
 BO MORGAN ALLOWS FREE USE OF THIS SOFTWARE IN ITS "AS IS" CONDITION.
 BO MORGAN DISCLAIMS ANY LIABILITY OF ANY KIND FOR ANY DAMAGES
 WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
 
 Bo Morgan requests users of this software to return to bo@mit.edu any
 improvements or extensions that they make and grant Bo Morgan the
 rights to redistribute these changes.'
'pass in arguments without quotes'

[deframe isismon_agent_learned_reactive_physical_resource_activator [frame] [isismon_agent
						   
									     window
									     vbox
									     menu_bar
									     file_menu_item
									     file_menu
									     file_exit_menu_item
									     
									     turn_right_resource__hbox
									     turn_right_resource__button
									     turn_right_resource__target__label
									     turn_right_resource__target__entry
									     turn_right_resource__target__label2
									     turn_right_resource__target__entry2

									     turn_left_resource__hbox
									     turn_left_resource__button
									     turn_left_resource__target__label
									     turn_left_resource__target__entry
									     turn_left_resource__target__label2
									     turn_left_resource__target__entry2


									     look_up_resource__hbox
									     look_up_resource__button
									     look_up_resource__target__label
									     look_up_resource__target__entry
									     look_up_resource__target__label2
									     look_up_resource__target__entry2

									     look_down_resource__hbox
									     look_down_resource__button
									     look_down_resource__target__label
									     look_down_resource__target__entry
									     look_down_resource__target__label2
									     look_down_resource__target__entry2

									     move_forward_resource__hbox
									     move_forward_resource__button
									     move_forward_resource__target__label
									     move_forward_resource__target__entry
									     move_forward_resource__target__label2
									     move_forward_resource__target__entry2
	
									     move_backward_resource__hbox
									     move_backward_resource__button
									     move_backward_resource__target__label
									     move_backward_resource__target__entry
									     move_backward_resource__target__label2
									     move_backward_resource__target__entry2
									    

									     level_pitch_resource__hbox
									     level_pitch_resource__button

									     align_body_with_neck_resource__hbox
									     align_body_with_neck_resource__button
 
									     empty_right_hand_resource__hbox
									     empty_right_hand_resource__button

									     empty_left_hand_resource__hbox
									     empty_left_hand_resource__button

									     center_body_on_resource__hbox
									     center_body_on_resource__button
									     center_body_on_resource__target__label
									     center_body_on_resource__target__entry

									     search_for_resource__hbox
									     search_for_resource__button
									     search_for_resource__target__label
									     search_for_resource__target__entry

									     look_for_resource__hbox
									     look_for_resource__button
									     look_for_resource__target__label
									     look_for_resource__target__entry

									     look_carefully_for_resource__hbox
									     look_carefully_for_resource__button
									     look_carefully_for_resource__target__label
									     look_carefully_for_resource__target__entry
									     
									     look_for_vertically_resource__hbox
									     look_for_vertically_resource__button
									     look_for_vertically_resource__target__label
									     look_for_vertically_resource__target__entry

									     hold_with_right_hand_resource__hbox
									     hold_with_right_hand_resource__button
									     hold_with_right_hand_resource__target__label
									     hold_with_right_hand_resource__target__entry
									     
									     hold_with_left_hand_resource__hbox
									     hold_with_left_hand_resource__button
									     hold_with_left_hand_resource__target__label
									     hold_with_left_hand_resource__target__entry
									     

									     use_right_hand_resource__hbox
									     use_right_hand_resource__button
									     use_right_hand_resource__target__label
									     use_right_hand_resource__target__entry
									     use_right_hand_resource__target__label2
									     use_right_hand_resource__target__entry2
									     

									     use_left_hand_resource__hbox
									     use_left_hand_resource__button
									     use_left_hand_resource__target__label
									     use_left_hand_resource__target__entry
									     use_left_hand_resource__target__label2
									     use_left_hand_resource__target__entry2
									     
									     
									     walk_directly_towards_resource__hbox
									     walk_directly_towards_resource__button
									     walk_directly_towards_resource__target__label
									     walk_directly_towards_resource__target__entry
									     
									     
									     track_mother_resource__hbox
									     track_mother_resource__button
									     track_mother_resource__target__label
									     track_mother_resource__target__entry
									     
									     demo_hold__hbox
									     demo_hold__button


									     pick_up_loaf_and_butter__hbox
									     pick_up_loaf_and_butter__button

									     make_toast__hbox
									     make_toast__button

									     
									     ]
  [new [initial-isismon_agent]
       [= isismon_agent initial-isismon_agent]
       [= window [gtk-window-new]]
       [set window title [format nil 'isismon - agent learned reactive physical resource activator - ' [get [get isismon_agent isis_agent] name]]]
       [= vbox [gtk-vbox-new 2]]
       
       [= menu_bar            [gtk-menu_bar-new]]
       [= file_menu_item      [gtk-menu_item-new 'File']]
       [= file_menu           [gtk-menu-new]]
       [= file_exit_menu_item [gtk-menu_item-new 'Exit']]
       [have file_exit_menu_item signal_connect 'activate'
	     [funk []
		   [have window destroy]]
	     nil]
       [have menu_bar append  file_menu_item]
       [have file_menu append file_exit_menu_item]
       [set file_menu_item submenu file_menu]
       [have vbox pack_start menu_bar nil nil 0]
       
       
       [= turn_right_resource__hbox [gtk-hbox-new 2]]
       [= turn_right_resource__button [gtk-button-new_with_label 'Turn Right - ']]
       [= turn_right_resource__target__label [gtk-label-new 'Step: ']]
       [= turn_right_resource__target__entry [gtk-entry-new]]
       [= turn_right_resource__target__label2 [gtk-label-new 'Speed: ']]
       [= turn_right_resource__target__entry2 [gtk-entry-new]]
       [have turn_right_resource__hbox pack_start turn_right_resource__button nil nil 0]
       [have turn_right_resource__hbox pack_start turn_right_resource__target__label nil nil 0]
       [have turn_right_resource__hbox pack_start turn_right_resource__target__entry t t 0]
       [have turn_right_resource__hbox pack_start turn_right_resource__target__label2 nil nil 0]
       [have turn_right_resource__hbox pack_start turn_right_resource__target__entry2 t t 0]
       [have vbox pack_start turn_right_resource__hbox nil nil 0]
       [have turn_right_resource__button signal_connect 'clicked'
	     [funk []
		   [if [get turn_right_resource__target__entry2 text]
		       [have this activate_resource `learned_reactive `physical `turn_right [have [get turn_right_resource__target__entry text] read] [have [get turn_right_resource__target__entry2 text] read]]
		     [have this activate_resource `learned_reactive `physical `turn_right [have [get turn_right_resource__target__entry text] read]]]]
	     nil]
       
       
       [= turn_left_resource__hbox [gtk-hbox-new 2]]
       [= turn_left_resource__button [gtk-button-new_with_label 'Turn Left - ']]
       [= turn_left_resource__target__label [gtk-label-new 'Step: ']]
       [= turn_left_resource__target__entry [gtk-entry-new]]
       [= turn_left_resource__target__label2 [gtk-label-new 'Speed: ']]
       [= turn_left_resource__target__entry2 [gtk-entry-new]]
       [have turn_left_resource__hbox pack_start turn_left_resource__button nil nil 0]
       [have turn_left_resource__hbox pack_start turn_left_resource__target__label nil nil 0]
       [have turn_left_resource__hbox pack_start turn_left_resource__target__entry t t 0]
       [have turn_left_resource__hbox pack_start turn_left_resource__target__label2 nil nil 0]
       [have turn_left_resource__hbox pack_start turn_left_resource__target__entry2 t t 0]
       [have vbox pack_start turn_left_resource__hbox nil nil 0]
       [have turn_left_resource__button signal_connect 'clicked'
	    [funk []
		   [if [get turn_left_resource__target__entry2 text]
		       [have this activate_resource `learned_reactive `physical `turn_left [have [get turn_left_resource__target__entry text] read] [have [get turn_left_resource__target__entry2 text] read]]
		     [have this activate_resource `learned_reactive `physical `turn_left [have [get turn_left_resource__target__entry text] read]]]] 
	     nil]
       
       [= look_up_resource__hbox [gtk-hbox-new 2]]
       [= look_up_resource__button [gtk-button-new_with_label 'Look Up - ']]
       [= look_up_resource__target__label [gtk-label-new 'Step: ']]
       [= look_up_resource__target__entry [gtk-entry-new]]
       [= look_up_resource__target__label2 [gtk-label-new 'Speed: ']]
       [= look_up_resource__target__entry2 [gtk-entry-new]]
       [have look_up_resource__hbox pack_start look_up_resource__button nil nil 0]
       [have look_up_resource__hbox pack_start look_up_resource__target__label nil nil 0]
       [have look_up_resource__hbox pack_start look_up_resource__target__entry t t 0]
       [have look_up_resource__hbox pack_start look_up_resource__target__label2 nil nil 0]
       [have look_up_resource__hbox pack_start look_up_resource__target__entry2 t t 0]
       [have vbox pack_start look_up_resource__hbox nil nil 0]
       [have look_up_resource__button signal_connect 'clicked'
	     [funk []
		   [if [get look_up_resource__target__entry2 text]
		       [have this activate_resource `learned_reactive `physical `look_up [have [get look_up_resource__target__entry text] read] [have [get look_up_resource__target__entry2 text] read]]
		     [have this activate_resource `learned_reactive `physical `look_up [have [get look_up_resource__target__entry text] read]]]]
	     nil]
   
       [= look_down_resource__hbox [gtk-hbox-new 2]]
       [= look_down_resource__button [gtk-button-new_with_label 'Look down - ']]
       [= look_down_resource__target__label [gtk-label-new 'Step: ']]
       [= look_down_resource__target__entry [gtk-entry-new]]
       [= look_down_resource__target__label2 [gtk-label-new 'Speed: ']]
       [= look_down_resource__target__entry2 [gtk-entry-new]]
       [have look_down_resource__hbox pack_start look_down_resource__button nil nil 0]
       [have look_down_resource__hbox pack_start look_down_resource__target__label nil nil 0]
       [have look_down_resource__hbox pack_start look_down_resource__target__entry t t 0]
       [have look_down_resource__hbox pack_start look_down_resource__target__label2 nil nil 0]
       [have look_down_resource__hbox pack_start look_down_resource__target__entry2 t t 0]
       [have vbox pack_start look_down_resource__hbox nil nil 0]
       [have look_down_resource__button signal_connect 'clicked'
	     [funk []
		   [if [get look_down_resource__target__entry2 text]
		       [have this activate_resource `learned_reactive `physical `look_down [have [get look_down_resource__target__entry text] read] [have [get look_down_resource__target__entry2 text] read]]
		     [have this activate_resource `learned_reactive `physical `look_down [have [get look_down_resource__target__entry text] read]]]]
	     nil]
       
          
       [= move_forward_resource__hbox [gtk-hbox-new 2]]
       [= move_forward_resource__button [gtk-button-new_with_label 'Move forward - ']]
       [= move_forward_resource__target__label [gtk-label-new 'Step: ']]
       [= move_forward_resource__target__entry [gtk-entry-new]]
       [= move_forward_resource__target__label2 [gtk-label-new 'Speed: ']]
       [= move_forward_resource__target__entry2 [gtk-entry-new]]
       [have move_forward_resource__hbox pack_start move_forward_resource__button nil nil 0]
       [have move_forward_resource__hbox pack_start move_forward_resource__target__label nil nil 0]
       [have move_forward_resource__hbox pack_start move_forward_resource__target__entry t t 0]
       [have move_forward_resource__hbox pack_start move_forward_resource__target__label2 nil nil 0]
       [have move_forward_resource__hbox pack_start move_forward_resource__target__entry2 t t 0]
       [have vbox pack_start move_forward_resource__hbox nil nil 0]
       [have move_forward_resource__button signal_connect 'clicked'
	     [funk []
		   [if [get move_forward_resource__target__entry2 text]
		       [have this activate_resource `learned_reactive `physical `move_forward [have [get move_forward_resource__target__entry text] read] [have [get move_forward_resource__target__entry2 text] read]]
		     [have this activate_resource `learned_reactive `physical `move_forward [have [get move_forward_resource__target__entry text] read]]]]
	     nil]
              
       [= move_backward_resource__hbox [gtk-hbox-new 2]]
       [= move_backward_resource__button [gtk-button-new_with_label 'move backward - ']]
       [= move_backward_resource__target__label [gtk-label-new 'Step: ']]
       [= move_backward_resource__target__entry [gtk-entry-new]]
       [= move_backward_resource__target__label2 [gtk-label-new 'Speed: ']]
       [= move_backward_resource__target__entry2 [gtk-entry-new]]
       [have move_backward_resource__hbox pack_start move_backward_resource__button nil nil 0]
       [have move_backward_resource__hbox pack_start move_backward_resource__target__label nil nil 0]
       [have move_backward_resource__hbox pack_start move_backward_resource__target__entry t t 0]
       [have move_backward_resource__hbox pack_start move_backward_resource__target__label2 nil nil 0]
       [have move_backward_resource__hbox pack_start move_backward_resource__target__entry2 t t 0]
       [have vbox pack_start move_backward_resource__hbox nil nil 0]
       [have move_backward_resource__button signal_connect 'clicked'
	     [funk []
		   [if [get move_backward_resource__target__entry2 text]
		       [have this activate_resource `learned_reactive `physical `move_backward [have [get move_backward_resource__target__entry text] read] [have [get move_backward_resource__target__entry2 text] read]]
		     [have this activate_resource `learned_reactive `physical `move_backward [have [get move_backward_resource__target__entry text] read]]]]
	     nil]
       
           
       [= level_pitch_resource__hbox [gtk-hbox-new 2]]
       [= level_pitch_resource__button [gtk-button-new_with_label 'Level Pitch']]
       [have level_pitch_resource__hbox pack_start level_pitch_resource__button nil nil 0]
       [have vbox pack_start level_pitch_resource__hbox nil nil 0]
       [have level_pitch_resource__button signal_connect 'clicked'
	     [funk []
		   [have this activate_resource `learned_reactive `physical `level_pitch]]
	     nil]

       [= align_body_with_neck_resource__hbox [gtk-hbox-new 2]]
       [= align_body_with_neck_resource__button [gtk-button-new_with_label 'Align body with neck']]
       [have align_body_with_neck_resource__hbox pack_start align_body_with_neck_resource__button nil nil 0]
       [have vbox pack_start align_body_with_neck_resource__hbox nil nil 0]
       [have align_body_with_neck_resource__button signal_connect 'clicked'
	     [funk []
		   [have this activate_resource `learned_reactive `physical `align_body_with_neck]]
	     nil]

       [= empty_right_hand_resource__hbox [gtk-hbox-new 2]]
       [= empty_right_hand_resource__button [gtk-button-new_with_label 'Empty Right Hand']]
       [have empty_right_hand_resource__hbox pack_start empty_right_hand_resource__button nil nil 0]
       [have vbox pack_start empty_right_hand_resource__hbox nil nil 0]
       [have empty_right_hand_resource__button signal_connect 'clicked'
	     [funk []
		   [have this activate_resource `learned_reactive `physical `empty_right_hand]]
	     nil]
       
       [= empty_left_hand_resource__hbox [gtk-hbox-new 2]]
       [= empty_left_hand_resource__button [gtk-button-new_with_label 'Empty Left Hand']]
       [have empty_left_hand_resource__hbox pack_start empty_left_hand_resource__button nil nil 0]
       [have vbox pack_start empty_left_hand_resource__hbox nil nil 0]
       [have empty_left_hand_resource__button signal_connect 'clicked'
	     [funk []
		   [have this activate_resource `learned_reactive `physical `empty_left_hand]]
	     nil]


       [= center_body_on_resource__hbox [gtk-hbox-new 2]]
       [= center_body_on_resource__button [gtk-button-new_with_label 'center_body_on']]
       [= center_body_on_resource__target__label [gtk-label-new 'Target: ']]
       [= center_body_on_resource__target__entry [gtk-entry-new]]
       [have center_body_on_resource__hbox pack_start center_body_on_resource__button nil nil 0]
       [have center_body_on_resource__hbox pack_start center_body_on_resource__target__label nil nil 0]
       [have center_body_on_resource__hbox pack_start center_body_on_resource__target__entry t t 0]
       [have vbox pack_start center_body_on_resource__hbox nil nil 0]
       [have center_body_on_resource__button signal_connect 'clicked'
	     [funk []
		   [have this activate_resource `learned_reactive `physical `center_body_on [get [get  look_for_resource__target__entry text] as-symbol]]]
	     nil]
       
       


       [= search_for_resource__hbox [gtk-hbox-new 2]]
       [= search_for_resource__button [gtk-button-new_with_label 'search_for']]
       [= search_for_resource__target__label [gtk-label-new 'Target: ']]
       [= search_for_resource__target__entry [gtk-entry-new]]
       [have search_for_resource__hbox pack_start search_for_resource__button nil nil 0]
       [have search_for_resource__hbox pack_start search_for_resource__target__label nil nil 0]
       [have search_for_resource__hbox pack_start search_for_resource__target__entry t t 0]
       [have vbox pack_start search_for_resource__hbox nil nil 0]
       [have search_for_resource__button signal_connect 'clicked'
	     [funk []
		   [have this activate_resource `learned_reactive `physical `search_for [get [get  search_for_resource__target__entry text] as-symbol]]]
	     nil]
       

       [= look_for_resource__hbox [gtk-hbox-new 2]]
       [= look_for_resource__button [gtk-button-new_with_label 'look_for']]
       [= look_for_resource__target__label [gtk-label-new 'Target: ']]
       [= look_for_resource__target__entry [gtk-entry-new]]
       [have look_for_resource__hbox pack_start look_for_resource__button nil nil 0]
       [have look_for_resource__hbox pack_start look_for_resource__target__label nil nil 0]
       [have look_for_resource__hbox pack_start look_for_resource__target__entry t t 0]
       [have vbox pack_start look_for_resource__hbox nil nil 0]
       [have look_for_resource__button signal_connect 'clicked'
	     [funk []
		   [have this activate_resource `learned_reactive `physical `look_for [get [get  look_for_resource__target__entry text] as-symbol]]]
	     nil]
       
       
       [= look_carefully_for_resource__hbox [gtk-hbox-new 2]]
       [= look_carefully_for_resource__button [gtk-button-new_with_label 'Look carefully for']]
       [= look_carefully_for_resource__target__label [gtk-label-new 'Target: ']]
       [= look_carefully_for_resource__target__entry [gtk-entry-new]]
       [have look_carefully_for_resource__hbox pack_start look_carefully_for_resource__button nil nil 0]
       [have look_carefully_for_resource__hbox pack_start look_carefully_for_resource__target__label nil nil 0]
       [have look_carefully_for_resource__hbox pack_start look_carefully_for_resource__target__entry t t 0]
       [have vbox pack_start look_carefully_for_resource__hbox nil nil 0]
       [have look_carefully_for_resource__button signal_connect 'clicked'
	     [funk []
		   [print [get [get  look_carefully_for_resource__target__entry text] as-symbol]]
		   [print [type [get [get  look_carefully_for_resource__target__entry text] as-symbol]]]
		   [have this activate_resource `learned_reactive `physical `look_carefully_for [get [get  look_for_vertically_resource__target__entry text] as-symbol]]]
	     nil]
       
       
       [= look_for_vertically_resource__hbox [gtk-hbox-new 2]]
       [= look_for_vertically_resource__button [gtk-button-new_with_label 'Look for vertically']]
       [= look_for_vertically_resource__target__label [gtk-label-new 'Target: ']]
       [= look_for_vertically_resource__target__entry [gtk-entry-new]]
       [have look_for_vertically_resource__hbox pack_start look_for_vertically_resource__button nil nil 0]
       [have look_for_vertically_resource__hbox pack_start look_for_vertically_resource__target__label nil nil 0]
       [have look_for_vertically_resource__hbox pack_start look_for_vertically_resource__target__entry t t 0]
       [have vbox pack_start look_for_vertically_resource__hbox nil nil 0]
       [have look_for_vertically_resource__button signal_connect 'clicked'
	     [funk []
		   [print [get [get  look_for_vertically_resource__target__entry text] as-symbol]]
		   [print [type [get [get  look_for_vertically_resource__target__entry text] as-symbol]]]
		   [have this activate_resource `learned_reactive `physical `look_for_vertically [get [get look_for_vertically_resource__target__entry text] as-symbol]]]
	     nil]
       
       [= hold_with_right_hand_resource__hbox [gtk-hbox-new 2]]
       [= hold_with_right_hand_resource__button [gtk-button-new_with_label 'Hold with Right Hand']]
       [= hold_with_right_hand_resource__target__label [gtk-label-new 'Target: ']]
       [= hold_with_right_hand_resource__target__entry [gtk-entry-new]]
       [have hold_with_right_hand_resource__hbox pack_start hold_with_right_hand_resource__button nil nil 0]
       [have hold_with_right_hand_resource__hbox pack_start hold_with_right_hand_resource__target__label nil nil 0]
       [have hold_with_right_hand_resource__hbox pack_start hold_with_right_hand_resource__target__entry t t 0]
       [have vbox pack_start hold_with_right_hand_resource__hbox nil nil 0]
       [have hold_with_right_hand_resource__button signal_connect 'clicked'
	     [funk []
		   [print [get [get  hold_with_right_hand_resource__target__entry text] as-symbol]]
		   [have this activate_resource `learned_reactive `physical `hold_with_right_hand [get [get  hold_with_right_hand_resource__target__entry text] as-symbol]]]
	     nil]
       
       [= hold_with_left_hand_resource__hbox [gtk-hbox-new 2]]
       [= hold_with_left_hand_resource__button [gtk-button-new_with_label 'Hold with Left Hand']]
       [= hold_with_left_hand_resource__target__label [gtk-label-new 'Target: ']]
       [= hold_with_left_hand_resource__target__entry [gtk-entry-new]]
       [have hold_with_left_hand_resource__hbox pack_start hold_with_left_hand_resource__button nil nil 0]
       [have hold_with_left_hand_resource__hbox pack_start hold_with_left_hand_resource__target__label nil nil 0]
       [have hold_with_left_hand_resource__hbox pack_start hold_with_left_hand_resource__target__entry t t 0]
       [have vbox pack_start hold_with_left_hand_resource__hbox nil nil 0]
       [have hold_with_left_hand_resource__button signal_connect 'clicked'
	     [funk []
		   [have this activate_resource `learned_reactive `physical `hold_with_left_hand [get [get hold_with_left_hand_resource__target__entry text] as-symbol]]]
	     nil]
  
       [= use_right_hand_resource__hbox [gtk-hbox-new 2]]
       [= use_right_hand_resource__button [gtk-button-new_with_label 'Use  Right Hand']]
       [= use_right_hand_resource__target__label [gtk-label-new 'Action: ']]
       [= use_right_hand_resource__target__entry [gtk-entry-new]]
       [= use_right_hand_resource__target__label2 [gtk-label-new 'Target: ']]
       [= use_right_hand_resource__target__entry2 [gtk-entry-new]]
       [have use_right_hand_resource__hbox pack_start use_right_hand_resource__button nil nil 0]
       [have use_right_hand_resource__hbox pack_start use_right_hand_resource__target__label nil nil 0]
       [have use_right_hand_resource__hbox pack_start use_right_hand_resource__target__entry t t 0]
       [have use_right_hand_resource__hbox pack_start use_right_hand_resource__target__label2 nil nil 0]
       [have use_right_hand_resource__hbox pack_start use_right_hand_resource__target__entry2 t t 0]
       [have vbox pack_start use_right_hand_resource__hbox nil nil 0]
       [have use_right_hand_resource__button signal_connect 'clicked'
	     [funk []
		   [print [get [get  use_right_hand_resource__target__entry text] as-symbol]]
		   [have this activate_resource `learned_reactive `physical `use_right_hand [get [get use_right_hand_resource__target__entry text] as-symbol] [get [get use_right_hand_resource__target__entry2 text] as-symbol]]]
	     nil]
       
       [= use_left_hand_resource__hbox [gtk-hbox-new 2]]
       [= use_left_hand_resource__button [gtk-button-new_with_label 'Use Left Hand']]
       [= use_left_hand_resource__target__label [gtk-label-new 'Action: ']]
       [= use_left_hand_resource__target__entry [gtk-entry-new]]
       [= use_left_hand_resource__target__label2 [gtk-label-new 'Target: ']]
       [= use_left_hand_resource__target__entry2 [gtk-entry-new]]
       [have use_left_hand_resource__hbox pack_start use_left_hand_resource__button nil nil 0]
       [have use_left_hand_resource__hbox pack_start use_left_hand_resource__target__label nil nil 0]
       [have use_left_hand_resource__hbox pack_start use_left_hand_resource__target__entry t t 0]
       [have use_left_hand_resource__hbox pack_start use_left_hand_resource__target__label2 nil nil 0]
       [have use_left_hand_resource__hbox pack_start use_left_hand_resource__target__entry2 t t 0]
       [have vbox pack_start use_left_hand_resource__hbox nil nil 0]
       [have use_left_hand_resource__button signal_connect 'clicked'
	     [funk []
		   [have this activate_resource `learned_reactive `physical `use_left_hand [get [get use_left_hand_resource__target__entry text] as-symbol] [get [get use_left_hand_resource__target__entry2 text] as-symbol]]]
	     nil]
         

       [= walk_directly_towards_resource__hbox [gtk-hbox-new 2]]
       [= walk_directly_towards_resource__button [gtk-button-new_with_label 'Walk directly towards']]
       [= walk_directly_towards_resource__target__label [gtk-label-new 'Target: ']]
       [= walk_directly_towards_resource__target__entry [gtk-entry-new]]
       [have walk_directly_towards_resource__hbox pack_start walk_directly_towards_resource__button nil nil 0]
       [have walk_directly_towards_resource__hbox pack_start walk_directly_towards_resource__target__label nil nil 0]
       [have walk_directly_towards_resource__hbox pack_start walk_directly_towards_resource__target__entry t t 0]
       [have vbox pack_start walk_directly_towards_resource__hbox nil nil 0]
       [have walk_directly_towards_resource__button signal_connect 'clicked'
	     [funk []
		   [have this activate_resource `learned_reactive `physical `walk_directly_towards [get [get walk_directly_towards_resource__target__entry text] as-symbol]]]
	     nil]
         
       [= track_mother_resource__hbox [gtk-hbox-new 2]]
       [= track_mother_resource__button [gtk-button-new_with_label 'Track Mother']]
       [= track_mother_resource__target__label [gtk-label-new 'Attention: ']]
       [= track_mother_resource__target__entry [gtk-entry-new]]
       [have track_mother_resource__hbox pack_start track_mother_resource__button nil nil 0]
       [have track_mother_resource__hbox pack_start track_mother_resource__target__label nil nil 0]
       [have track_mother_resource__hbox pack_start track_mother_resource__target__entry t t 0]
       [have vbox pack_start track_mother_resource__hbox nil nil 0]
       [have track_mother_resource__button signal_connect 'clicked'
	     [funk []
		   [have this activate_resource `learned_reactive `physical `track_mother [have [get track_mother_resource__target__entry text] read]]]
	     nil]
       

       [= demo_hold__hbox [gtk-hbox-new 2]]
       [= demo_hold__button [gtk-button-new_with_label 'demo - hold knife']]
       [have demo_hold__hbox  pack_start demo_hold__button nil nil 0]
       [have vbox pack_start demo_hold__hbox nil nil 0]
       [have demo_hold__button signal_connect 'clicked'
	     [funk []
		   [demo_hold `knife]]
	     nil]



       [= pick_up_loaf_and_butter__hbox [gtk-hbox-new 2]]
       [= pick_up_loaf_and_butter__button [gtk-button-new_with_label 'pick up loaf and butter']]
       [have pick_up_loaf_and_butter__hbox  pack_start pick_up_loaf_and_butter__button nil nil 0]
       [have vbox pack_start pick_up_loaf_and_butter__hbox nil nil 0]
       [have pick_up_loaf_and_butter__button signal_connect 'clicked'
	     [funk []
		   [have this activate_resource `learned_reactive `physical `pick_up_loaf_and_butter ]]
	     nil]  
       

       [= make_toast__hbox [gtk-hbox-new 2]]
       [= make_toast__button [gtk-button-new_with_label 'make toast']]
       [have make_toast__hbox  pack_start make_toast__button nil nil 0]
       [have vbox pack_start make_toast__hbox nil nil 0]
       [have make_toast__button signal_connect 'clicked'
	     [funk []
		   [print 'make toast']
		   [have this activate_resource `learned_reactive `physical `make_toast ]]	
     nil]  
             
       [have window add vbox]
       
       [have window show_all]]]

[deftypefunk isismon_agent_learned_reactive_physical_resource_activator execute activate_resource [layer_name agency_name resource_name :rest args]
  [let [[activate_resource [get [get [get isismon_agent isis_agent] mind] resource `builtin_reactive `neural_plug `activate_resource]]]
    [have-apply activate_resource command `[,layer_name ,agency_name ,resource_name @args]]]]

