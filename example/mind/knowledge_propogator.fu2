'Copyright (c) 2007-2010 Bo Morgan.
 All rights reserved.
 
 Author: Bo Morgan
 
 Permission to use, copy, modify and distribute this software and its
 documentation is hereby granted, provided that both the copyright
 notice and this permission notice appear in all copies of the
 software, derivative works or modified versions, and any portions
 thereof, and that both notices appear in supporting documentation.
 
 BO MORGAN ALLOWS FREE USE OF THIS SOFTWARE IN ITS "AS IS" CONDITION.
 BO MORGAN DISCLAIMS ANY LIABILITY OF ANY KIND FOR ANY DAMAGES
 WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
 
 Bo Morgan requests users of this software to return to bo@mit.edu any
 improvements or extensions that they make and grant Bo Morgan the
 rights to redistribute these changes.'


'knowledge_propogator'

[deframe          knowledge_propogator [frame] [name cell_identity_hash propogator]]
[deftypeconstruct knowledge_propogator [name]
  [set this name               name]
  [set this cell_identity_hash [hash]]
  [set this propogator         [new propogator_resource [get [string-concat [get name as-string] '-resource'] as-symbol]]]
  this]

[deftypefunk knowledge_propogator get resource []
  [get [get this propogator] resource]]

[deftypefunk knowledge_propogator execute call_propogate [provenance]
  [have [get this propogator] call provenance]]

[deftypefunk knowledge_propogator execute add_new_cell [cell_identity]
  [let [[cell_identity_hash [get this cell_identity_hash]]]
    [have cell_identity_hash add cell_identity]
    [let [[cell_name [have cell_identity_hash lookup cell_identity]]]
      [have [get this propogator] add_new_cell cell_name]]]]

[deftypefunk knowledge_propogator get cell [cell_identity]
  [let [[cell_name [have cell_identity_hash lookup cell_identity]]]
    [get [get this propogator] cell cell_name]]]

[deftypefunk knowledge_propogator get value [cell_identity provenance]
  [get [get this cell cell_identity] value provenance]]

[deftypefunk knowledge_propogator set value [cell_identity provenance cell_value]
  [set [get this cell cell_identity] value provenance cell_value]]

[deftypefunk knowledge_propogator execute add_constraint [constraint]
  [have [get this propogator] add_constraint constraint]]

