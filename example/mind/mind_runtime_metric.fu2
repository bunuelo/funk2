'Copyright (c) 2007-2012 Bo Morgan.
 All rights reserved.
 
 Author: Bo Morgan
 
 Permission to use, copy, modify and distribute this software and its
 documentation is hereby granted, provided that both the copyright
 notice and this permission notice appear in all copies of the
 software, derivative works or modified versions, and any portions
 thereof, and that both notices appear in supporting documentation.
 
 BO MORGAN ALLOWS FREE USE OF THIS SOFTWARE IN ITS "AS IS" CONDITION.
 BO MORGAN DISCLAIMS ANY LIABILITY OF ANY KIND FOR ANY DAMAGES
 WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
 
 Bo Morgan requests users of this software to return to bo@mit.edu any
 improvements or extensions that they make and grant Bo Morgan the
 rights to redistribute these changes.'

[deframe relative_mind_runtime_metric [frame] [real_time
					       bytecode_count
					       execution_nanoseconds
					       bytes_allocated_count]
  [new [initial-real_time
	initial-bytecode_count
	initial-execution_nanoseconds
	initial-bytes_allocated_count]
       [= real_time             initial-real_time]
       [= bytecode_count        initial-bytecode_count]
       [= execution_nanoseconds initial-execution_nanoseconds]
       [= bytes_allocated_count initial-bytes_allocated_count]
       nil]]

[deframe mind_runtime_metric_point [frame] [real_time
					    bytecode_count
					    execution_nanoseconds
					    bytes_allocated_count]
  [new [initial-real_time
	initial-bytecode_count
	initial-execution_nanoseconds
	initial-bytes_allocated_count]
       [= real_time             initial-real_time]
       [= bytecode_count        initial-bytecode_count]
       [= execution_nanoseconds initial-execution_nanoseconds]
       [= bytes_allocated_count initial-bytes_allocated_count]
       nil]]

[defunk mind_runtime_metric_point-new_from_cause_group [cause_group]
  [new mind_runtime_metric_point
       [time]
       [get cause_group bytecode_count]
       [get cause_group execution_nanoseconds]
       [get cause_group bytes_allocated_count]]]

[deftypefunk mind_runtime_metric_point get minus [that]
  [assert-type mind_runtime_metric_point that]
  [new relative_mind_runtime_metric
       [- [get this real_time]             [get that real_time]]
       [- [get this bytecode_count]        [get that bytecode_count]]
       [- [get this execution_nanoseconds] [get that execution_nanoseconds]]
       [- [get this bytes_allocated_count] [get that bytes_allocated_count]]]]

