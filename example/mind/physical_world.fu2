'Copyright (c) 2007-2010 Bo Morgan.
 All rights reserved.
 
 Author: Bo Morgan
 
 Permission to use, copy, modify and distribute this software and its
 documentation is hereby granted, provided that both the copyright
 notice and this permission notice appear in all copies of the
 software, derivative works or modified versions, and any portions
 thereof, and that both notices appear in supporting documentation.
 
 BO MORGAN ALLOWS FREE USE OF THIS SOFTWARE IN ITS "AS IS" CONDITION.
 BO MORGAN DISCLAIMS ANY LIABILITY OF ANY KIND FOR ANY DAMAGES
 WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
 
 Bo Morgan requests users of this software to return to bo@mit.edu any
 improvements or extensions that they make and grant Bo Morgan the
 rights to redistribute these changes.'


'physical_world'

[deframe physical_world [frame] [time_step format_mutex agent_body_frame]
  [new []
       [set this time_step        0]
       [set this format_mutex     [new mutex]]
       [set this agent_body_frame [frame]]
       this]]

[deftypefunk physical_world execute destroy []
  [mapc [funk [agent_body]
	      [have agent_body destroy]]
	[get this agent_bodies]]]

[deftypefunk physical_world execute add_agent_body [agent_body]
  [if [get agent_body physical_world]
      [error bug_type agent_body_is_already_in_a_physical_world agent_body agent_body]
    [prog [set agent_body physical_world this]
	  [have [get this agent_body_frame] add [get agent_body name] agent_body]]]]

[deftypefunk physical_world execute step_physical_world []
  [set this time_step [+ 1 [get this time_step]]]]

[deftypefunk physical_world execute format [:rest expressions]
  [let [[format_mutex [get this format_mutex]]]
    [have format_mutex lock]
    [apply &format [cons stdout expressions]]
    [have format_mutex unlock]]]

[deftypefunk physical_world get agent_bodies []
  [get [get this agent_body_frame] values]]

[deftypefunk physical_world get agent_names []
  [get [get this agent_body_frame] slots]]

[deftypefunk physical_world get agent_body [agent_name]
  [have [get this agent_body_frame] lookup agent_name]]

[deftypefunk physical_world get agent_mind [agent_name]
  [get [get this agent_body agent_name] mind]]

