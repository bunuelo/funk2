'Copyright (c) 2007-2010 Bo Morgan.
 All rights reserved.
 
 Author: Bo Morgan
 
 Permission to use, copy, modify and distribute this software and its
 documentation is hereby granted, provided that both the copyright
 notice and this permission notice appear in all copies of the
 software, derivative works or modified versions, and any portions
 thereof, and that both notices appear in supporting documentation.
 
 BO MORGAN ALLOWS FREE USE OF THIS SOFTWARE IN ITS "AS IS" CONDITION.
 BO MORGAN DISCLAIMS ANY LIABILITY OF ANY KIND FOR ANY DAMAGES
 WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
 
 Bo Morgan requests users of this software to return to bo@mit.edu any
 improvements or extensions that they make and grant Bo Morgan the
 rights to redistribute these changes.'


'traced_resource'

[deframe traced_resource [resource] []
  [new [initial-name initial-active_funk]
       [construct resource initial-name initial-active_funk]
       
       ]]


[deftypefunk traced_resource execute activate [:rest args]
  [terminal_format standard-terminal '\ntraced activate']
  [type-have-apply resource this activate args]
  ]

[deftypefunk traced_resource execute wait_to_activate [:rest args]
  [terminal_format standard-terminal '\ntraced wait_to_activate']
  [type-have-apply resource this wait_to_activate args]
  ]

[deftypefunk traced_resource execute wait_to_call [:rest args]
  [terminal_format standard-terminal '\ntraced wait_to_call']
  [type-have-apply resource this wait_to_call args]
  ]

[deftypefunk traced_resource execute call [:rest args]
  [terminal_format standard-terminal '\ntraced call']
  [type-have-apply resource this call args]
  ]

[deftypefunk traced_resource execute finish []
  [terminal_format standard-terminal '\ntraced finish']
  [type-have resource this finish]
  ]

