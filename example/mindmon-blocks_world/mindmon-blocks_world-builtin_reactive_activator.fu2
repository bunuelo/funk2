'Copyright (c) 2007-2011 Bo Morgan.
 All rights reserved.
 
 Author: Bo Morgan
 
 Permission to use, copy, modify and distribute this software and its
 documentation is hereby granted, provided that both the copyright
 notice and this permission notice appear in all copies of the
 software, derivative works or modified versions, and any portions
 thereof, and that both notices appear in supporting documentation.
 
 BO MORGAN ALLOWS FREE USE OF THIS SOFTWARE IN ITS "AS IS" CONDITION.
 BO MORGAN DISCLAIMS ANY LIABILITY OF ANY KIND FOR ANY DAMAGES
 WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
 
 Bo Morgan requests users of this software to return to bo@mit.edu any
 improvements or extensions that they make and grant Bo Morgan the
 rights to redistribute these changes.'


[deframe mindmon_blocks_world_builtin_reactive_activator_window [frame] [mindmon_agent
									 
									 window
									 vbox
									 menu_bar
									 file_menu_item
									 file_menu
									 file_exit_menu_item
									 
									 move_left_resource__hbox
									 move_left_resource__button
									 move_right_resource__hbox
									 move_right_resource__button
									 grab_resource__hbox
									 grab_resource__button
									 drop_resource__hbox
									 drop_resource__button
									 ]
  [new [initial-mindmon_agent]
       [= mindmon_agent initial-mindmon_agent]
       [= window [gtk-window-new]]
       [set window title [format nil [get mindmon_agent name] ' - Built-In Reactive Activator']]
       [set window transient_for [get [get mindmon_agent mindmon_agent_widget] window]]
       [set window destroy_with_parent t]
       [= vbox [gtk-vbox-new 2]]

       [= menu_bar            [gtk-menu_bar-new]]
       [= file_menu_item      [gtk-menu_item-new 'File']]
       [= file_menu           [gtk-menu-new]]
       [= file_exit_menu_item [gtk-menu_item-new 'Exit']]
       [have file_exit_menu_item signal_connect 'activate'
	     [funk []
		   [have window destroy]]
	     nil]
       [have menu_bar append  file_menu_item]
       [have file_menu append file_exit_menu_item]
       [set file_menu_item submenu file_menu]
       [have vbox pack_start menu_bar nil nil 0]
        
       [= move_left_resource__hbox [gtk-hbox-new 2]]
       [= move_left_resource__button [gtk-button-new_with_label 'Move Left']]
       [have move_left_resource__hbox pack_start move_left_resource__button nil nil 0]
       [have vbox pack_start move_left_resource__hbox nil nil 0]
       [have move_left_resource__button signal_connect 'clicked'
	     [funk []
		   [have this activate_resource `builtin_reactive `physical `move_left]]
	     nil]
       
       [= move_right_resource__hbox [gtk-hbox-new 2]]
       [= move_right_resource__button [gtk-button-new_with_label 'Move Right']]
       [have move_right_resource__hbox pack_start move_right_resource__button nil nil 0]
       [have vbox pack_start move_right_resource__hbox nil nil 0]
       [have move_right_resource__button signal_connect 'clicked'
	     [funk []
		   [have this activate_resource `builtin_reactive `physical `move_right]]
	     nil]

       [= grab_resource__hbox [gtk-hbox-new 2]]
       [= grab_resource__button [gtk-button-new_with_label 'Grab']]
       [have grab_resource__hbox pack_start grab_resource__button nil nil 0]
       [have vbox pack_start grab_resource__hbox nil nil 0]
       [have grab_resource__button signal_connect 'clicked'
	     [funk []
		   [have this activate_resource `builtin_reactive `physical `grab]]
	     nil]
       
       [= drop_resource__hbox [gtk-hbox-new 2]]
       [= drop_resource__button [gtk-button-new_with_label 'Drop']]
       [have drop_resource__hbox pack_start drop_resource__button nil nil 0]
       [have vbox pack_start drop_resource__hbox nil nil 0]
       [have drop_resource__button signal_connect 'clicked'
	     [funk []
		   [have this activate_resource `builtin_reactive `physical `drop]]
	     nil]
       
       [have window add vbox]
       [have window show_all]]]


[deftypefunk mindmon_blocks_world_builtin_reactive_activator_window execute activate_resource [layer_name agency_name resource_name :rest args]
  [let [[activate_resource [get [get mindmon_agent mind] resource `builtin_reactive `neural_plug `activate_resource]]]
    [have-apply activate_resource command `[,layer_name ,agency_name ,resource_name @args]]]]



'mindmon_blocks_world_builtin_reactive_activator'

[deframe mindmon_blocks_world_builtin_reactive_activator [mindmon_agent_tool] []
  [new [initial-mindmon_agent]
       [construct mindmon_agent_tool initial-mindmon_agent]
       ]]

[deftypefunk mindmon_blocks_world_builtin_reactive_activator get mindmon_agent_tool-title []
  'Builtin-Reactive Activator']

[deftypefunk mindmon_blocks_world_builtin_reactive_activator execute mindmon_agent_tool-start []
  [terminal_format standard-terminal '\nmindmon_blocks_world_builtin_reactive_activator: starting.']
  [new mindmon_blocks_world_builtin_reactive_physical_activator_window [get this mindmon_agent]]]


