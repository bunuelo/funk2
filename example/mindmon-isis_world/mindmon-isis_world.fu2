'Copyright (c) 2007-2011 Bo Morgan.
 All rights reserved.
 
 Author: Bo Morgan
 
 Permission to use, copy, modify and distribute this software and its
 documentation is hereby granted, provided that both the copyright
 notice and this permission notice appear in all copies of the
 software, derivative works or modified versions, and any portions
 thereof, and that both notices appear in supporting documentation.
 
 BO MORGAN ALLOWS FREE USE OF THIS SOFTWARE IN ITS "AS IS" CONDITION.
 BO MORGAN DISCLAIMS ANY LIABILITY OF ANY KIND FOR ANY DAMAGES
 WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
 
 Bo Morgan requests users of this software to return to bo@mit.edu any
 improvements or extensions that they make and grant Bo Morgan the
 rights to redistribute these changes.'


'mindmon_isis_world_agent_builtin_reactive_activator'

[deframe mindmon_isis_world_agent_builtin_reactive_activator [mindmon_agent_tool] []
  [new [initial-mindmon_agent]
       [construct mindmon_agent_tool initial-mindmon_agent]
       ]]

[deftypefunk mindmon_isis_world_agent_builtin_reactive_activator get mindmon_agent_tool-title []
  'Builtin-Reactive Activator']

[deftypefunk mindmon_isis_world_agent_builtin_reactive_activator execute mindmon_agent_tool-start []
  [terminal_format standard-terminal '\nmindmon_isis_world_agent_builtin_reactive_activator: here.']
  ]


'mindmon_isis_world_agent_learned_reactive_activator'

[deframe mindmon_isis_world_agent_learned_reactive_activator [mindmon_agent_tool] []
  [new [initial-mindmon_agent]
       [construct mindmon_agent_tool initial-mindmon_agent]
       ]]

[deftypefunk mindmon_isis_world_agent_learned_reactive_activator get mindmon_agent_tool-title []
  'Learned-Reactive Activator']

[deftypefunk mindmon_isis_world_agent_learned_reactive_activator execute mindmon_agent_tool-start []
  [terminal_format standard-terminal '\nmindmon_isis_world_agent_learned_reactive_activator: here.']
  ]


'mindmon_isis_world_agent_deliberative_activator'

[deframe mindmon_isis_world_agent_deliberative_activator [mindmon_agent_tool] []
  [new [initial-mindmon_agent]
       [construct mindmon_agent_tool initial-mindmon_agent]
       ]]

[deftypefunk mindmon_isis_world_agent_deliberative_activator get mindmon_agent_tool-title []
  'Deliberative Activator']

[deftypefunk mindmon_isis_world_agent_deliberative_activator execute mindmon_agent_tool-start []
  [terminal_format standard-terminal '\nmindmon_isis_world_agent_deliberative_activator: here.']
  ]


'mindmon_isis_world_agent'

[deframe mindmon_isis_world_agent [mindmon_agent] [moral_compass
						   isis_agent_body]
  [new [initial-mindmon_world
	initial-name]
       [construct mindmon_agent initial-mindmon_world initial-name]
       [= moral_compass [new moral_compass]]
       [= isis_agent_body [new isis_agent_body [get mindmon_world isis_world] moral_compass name]]
       nil]]

[deftypefunk mindmon_isis_world_agent get mind []
  moral_compass]

[deftypefunk mindmon_isis_world_agent get body []
  isis_agent_body]

[deftypefunk mindmon_isis_world_agent get knowledge_base_names []
  `[other_agents_knowledge
    goal_event_knowledge
    goal_knowledge
    reflective_event_knowledge
    reflective_knowledge
    physical_type_event_knowledge
    physical_type_knowledge
    physical_event_knowledge
    physical_knowledge
    visual_knowledge]]

[deftypefunk mindmon_isis_world_agent get tool_names []
  `[mindmon_isis_world_agent_builtin_reactive_activator
    mindmon_isis_world_agent_learned_reactive_activator
    mindmon_isis_world_agent_deliberative_activator]]

[deftypefunk mindmon_isis_world_agent execute sense_world []
  [have isis_agent_body sense_world]]

[deftypefunk mindmon_isis_world_agent get as-chunk []
  [get moral_compass as-chunk]]


'mindmon_isis_world'

[deframe mindmon_isis_world [mindmon_world] [isis_world]
  [new [isis_world_server_hostname]
       [construct mindmon_world [gensym 'mindmon_isis_world']]
       [= isis_world [new isis_world [new isis_world_client isis_world_server_hostname]]]
       ]]

[deftypefunk mindmon_isis_world get compatible_agent_types []
  `[mindmon_isis_world_agent]]

[deftypefunk mindmon_isis_world get agent_names []
  `[Ralph
    Lauren
    Macy]]

[deftypefunk mindmon_isis_world execute raw_step_simulation [step_size]
  [have isis_world raw_step_simulation step_size]]

[deftypefunk mindmon_isis_world execute step_physical_world []
  [have isis_world step_physical_world]]

[deftypefunk mindmon_isis_world execute destroy []
  [have isis_world destroy]]

[deftypefunk mindmon_isis_world execute initialize_simulation []
  [have isis_world initialize_simulation]]

[deftypefunk mindmon_isis_world get initialize_events []
  [get isis_world initialize_events]]

[deftypefunk mindmon_isis_world get screenshot []
  [get isis_world screenshot]] 

[deftypefunk mindmon_isis_world get all_objects_summary []
  [get isis_world all_objects_summary]]

[new mindmon_isis_world 'localhost']
[new mindmon_isis_world 'imprimer.media.mit.edu']
[new mindmon_isis_world 'simonetti.media.mit.edu']
[new mindmon_isis_world 'resource.media.mit.edu']
[new mindmon_isis_world 'psuche.media.mit.edu']
[new mindmon_isis_world 'rct.media.mit.edu']

