'Copyright (c) 2007-2011 Bo Morgan.
 All rights reserved.
 
 Author: Bo Morgan
 
 Permission to use, copy, modify and distribute this software and its
 documentation is hereby granted, provided that both the copyright
 notice and this permission notice appear in all copies of the
 software, derivative works or modified versions, and any portions
 thereof, and that both notices appear in supporting documentation.
 
 BO MORGAN ALLOWS FREE USE OF THIS SOFTWARE IN ITS "AS IS" CONDITION.
 BO MORGAN DISCLAIMS ANY LIABILITY OF ANY KIND FOR ANY DAMAGES
 WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
 
 Bo Morgan requests users of this software to return to bo@mit.edu any
 improvements or extensions that they make and grant Bo Morgan the
 rights to redistribute these changes.'


[deframe mindmon_agent [frame] [mindmon_world
				name
				mindmon_agent_widget
				
				[retina_image_sequence_enabled nil]
				[retina_image_sequence         [new image_sequence nil]]]
  [new [initial-mindmon_world
	initial-name]
       [= mindmon_world initial-mindmon_world]
       [= name          initial-name]
       
       [have mindmon_world __add_agent name this]
       ]]

[deftypefunk mindmon_agent set all_cameras_enabled [enabled]
  [= retina_image_sequence_enabled enabled]]

[deftypefunk mindmon_agent execute update_retina_image_sequence []
  [let [[image [have this sense_retina_image]]]
    [if image
	[have retina_image_sequence add_image_to_end image]]]]

[deftypefunk mindmon_agent execute update_after_step_simulation []
  [if retina_image_sequence_enabled
      [have this update_retina_image_sequence]]
  [have [get this body] update_after_step_simulation]]



'children of mindmon_agent must implement the interface below.'

[deftypefunk mindmon_agent get mind []
  [terminal_format standard-terminal '\nmindmon_agent-get-mind not implemented in ' [type this] ' interface.']
  nil]

[deftypefunk mindmon_agent get body []
  [terminal_format standard-terminal '\nmindmon_agent-get-body not implemented in ' [type this] ' interface.']
  nil]

[deftypefunk mindmon_agent get knowledge_base_names []
  [terminal_format standard-terminal '\nmindmon_agent-get-knowledge_base_names not implemented in ' [type this] ' interface.']
  nil]

[deftypefunk mindmon_agent get tool_names []
  [terminal_format standard-terminal '\nmindmon_agent-get-tool_names not implemented in ' [type this] ' interface.']
  nil]

[deftypefunk mindmon_agent execute sense_world []
  [terminal_format standard-terminal '\nmindmon_agent-execute-sense_world not implemented in ' [type this] ' interface.']
  nil]

[deftypefunk mindmon_agent execute sense_retina_image []
  [terminal_format standard-terminal '\nmindmon_agent-execute-sense_retina_image not implemented in ' [type this] ' interface.']
  nil]

[deftypefunk mindmon_agent get as-chunk []
  [terminal_format standard-terminal '\nmindmon_agent-get-as-chunk not implemented in ' [type this] ' interface.']
  nil]

