'Copyright (c) 2007-2011 Bo Morgan.
 All rights reserved.
 
 Author: Bo Morgan
 
 Permission to use, copy, modify and distribute this software and its
 documentation is hereby granted, provided that both the copyright
 notice and this permission notice appear in all copies of the
 software, derivative works or modified versions, and any portions
 thereof, and that both notices appear in supporting documentation.
 
 BO MORGAN ALLOWS FREE USE OF THIS SOFTWARE IN ITS "AS IS" CONDITION.
 BO MORGAN DISCLAIMS ANY LIABILITY OF ANY KIND FOR ANY DAMAGES
 WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
 
 Bo Morgan requests users of this software to return to bo@mit.edu any
 improvements or extensions that they make and grant Bo Morgan the
 rights to redistribute these changes.'


[deframe mindmon_knowledge [frame] [knowledge_name
				    
				    mindmon_agent
				    
				    knowledge_graph_expanded
				    knowledge_timeline_expanded
				    
				    knowledge_vbox
				    knowledge_button_label_hbox
				    knowledge_graph_expansion_button
				    knowledge_timeline_expansion_button
				    knowledge_label
				    knowledge_graph_view_button
				    knowledge_timeline_view_button
				    
				    knowledge_image_hbox
				    knowledge_graph_image
				    knowledge_timeline_image
				    ]
  [new [initial-mindmon_agent
	initial-knowledge_name]
       [= mindmon_agent  initial-mindmon_agent]
       [= knowledge_name initial-knowledge_name]
       
       [= knowledge_vbox [gtk-vbox-new 0]]
       
       [= knowledge_button_label_hbox [gtk-hbox-new 0]]
       [have knowledge_vbox pack_start knowledge_button_label_hbox nil nil 0]
       
       [= knowledge_graph_expansion_button [gtk-button-new_with_label '*']]
       [have knowledge_button_label_hbox pack_start knowledge_graph_expansion_button nil nil 0]
       
       [= knowledge_timeline_expansion_button [gtk-button-new_with_label 'T']]
       [have knowledge_button_label_hbox pack_start knowledge_timeline_expansion_button nil nil 0]
       
       [= knowledge_label [gtk-label-new [format nil knowledge_name]]]
       [have knowledge_button_label_hbox pack_start knowledge_label t t 0]
       
       [= knowledge_graph_view_button [gtk-button-new_with_label 'Graph']]
       [have knowledge_button_label_hbox pack_start knowledge_graph_view_button nil nil 0]
       [have knowledge_graph_view_button signal_connect 'clicked'
	     [funk []
		   [have this graph_view_knowledge]]
	     nil]
       
       [= knowledge_timeline_view_button [gtk-button-new_with_label 'Time']]
       [have knowledge_button_label_hbox pack_start knowledge_timeline_view_button nil nil 0]
       [have knowledge_timeline_view_button signal_connect 'clicked'
	     [funk []
		   [have this timeline_view_knowledge]]
	     nil]
       
       [= knowledge_image_hbox [gtk-hbox-new 0]]
       [have knowledge_vbox pack_start knowledge_image_hbox nil nil 0]
       
       [= knowledge_graph_image [gtk-image-new_from_image [image-new_from_rgb_data 11 11 [new chunk [* 11 11 3]]]]]
       [have knowledge_image_hbox pack_start knowledge_graph_image t t 0]
       
       [= knowledge_timeline_image [gtk-image-new_from_image [image-new_from_rgb_data 11 11 [new chunk [* 11 11 3]]]]]
       [have knowledge_image_hbox pack_start knowledge_timeline_image t t 0]
       
       [have knowledge_graph_expansion_button signal_connect 'clicked'
	     [funk []
		   [= knowledge_graph_expanded [not knowledge_graph_expanded]]]
	     nil]
       
       [have knowledge_timeline_expansion_button signal_connect 'clicked'
	     [funk []
		   [= knowledge_timeline_expanded [not knowledge_timeline_expanded]]]
	     nil]
       
       ]]

[deftypefunk mindmon_knowledge get widget []
  knowledge_vbox]

[deftypefunk mindmon_knowledge get name []
  knowledge_name]

[deftypefunk mindmon_knowledge get semantic_knowledge_base []
  [get [get [get mindmon_agent mindmon_agent] mind] semantic_knowledge_base knowledge_name]]  

[deftypefunk mindmon_knowledge execute update_knowledge_graph_image []
  [if knowledge_graph_expanded
      [prog [set knowledge_graph_image image [let [[dot_code [graphviz-digraph [stringlist-intersperse [mapcar [funk [knowledge_base]
														     [get knowledge_base as-digraph_dot_code]]
													       [conslist [get this semantic_knowledge_base]]]
												       '\n']]]]
					       [dot_code-as-image dot_code 320 240]]]
	    [have knowledge_graph_image show_all]]
    [have knowledge_graph_image hide_all]]]

[deftypefunk mindmon_knowledge execute update_knowledge_timeline_image []
  [if knowledge_timeline_expanded
      [prog [set knowledge_timeline_image image [let [[timeline [get [get this semantic_knowledge_base] as-timeline]]]
						  [get timeline as-constrained_image 320 240]]]
	    [have knowledge_timeline_image show_all]]
    [have knowledge_timeline_image hide_all]]]

[deftypefunk mindmon_knowledge execute update []
  [have this update_knowledge_graph_image]
  [have this update_knowledge_timeline_image]]

[deftypefunk mindmon_knowledge execute graph_view_knowledge []
  [terminal_format standard-terminal '\nMindmon generating and displaying graph of ' [get mindmon_agent name] '\'s ' knowledge_name ' semantic knowledge.']
  [let [[dot_code [graphviz-digraph [stringlist-intersperse [mapcar [funk [knowledge_base]
									  [get knowledge_base as-digraph_dot_code]]
								    [conslist [get [get [get mindmon_agent mindmon_agent] mind] semantic_knowledge_base knowledge_name]]]
							    '\n']]]]
    [fiber [funk [] [dot_code-gview dot_code]] nil]]]

[deftypefunk mindmon_knowledge execute timeline_view_knowledge []
  [terminal_format standard-terminal '\nMindmon generating and displaying timeline of ' [get mindmon_agent name] '\'s ' knowledge_name ' semantic knowledge.']
  [let [[timeline [get [get this semantic_knowledge_base] as-timeline]]]
    [let [[timeline_window [new gtk_timeline_window timeline]]]
      [set  timeline_window title [format nil 'Mindmon timeline of ' [get mindmon_agent name] '\'s ' knowledge_name ' semantic knowledge']]
      [have timeline_window show_all]
      nil]]]

