'Copyright (c) 2007-2010 Bo Morgan.
 All rights reserved.
 
 Author: Bo Morgan
 
 Permission to use, copy, modify and distribute this software and its
 documentation is hereby granted, provided that both the copyright
 notice and this permission notice appear in all copies of the
 software, derivative works or modified versions, and any portions
 thereof, and that both notices appear in supporting documentation.
 
 BO MORGAN ALLOWS FREE USE OF THIS SOFTWARE IN ITS "AS IS" CONDITION.
 BO MORGAN DISCLAIMS ANY LIABILITY OF ANY KIND FOR ANY DAMAGES
 WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
 
 Bo Morgan requests users of this software to return to bo@mit.edu any
 improvements or extensions that they make and grant Bo Morgan the
 rights to redistribute these changes.'


[defunk visual_semantic_knowledge-new_from_visual_objects [visual_objects]
  [let [[semantic_knowledge_base [new semantic_knowledge_base]]]
    [let [[semantic_objects nil]]
      [mapc [funk [object]
		  [let [[visual_object_semantic_frame [new visual_object_semantic_frame]]
			[phenomenal_name              [get object phenomenal_name]]]
		    [have visual_object_semantic_frame add_visual_object_name phenomenal_name]
		    [have semantic_knowledge_base add_semantic_frame visual_object_semantic_frame]
		    [= semantic_objects [cons visual_object_semantic_frame semantic_objects]]]]
	    visual_objects]
      [let [[object_iter_one semantic_objects]]
	[while object_iter_one
	  [let [[object_one      [car object_iter_one]]
		[object_iter_two [cdr object_iter_one]]]
	    [while object_iter_two
	      [let [[object_two [car object_iter_two]]]
		'pairwise pattern recognitions between objects'
		
		[if [> [get object_one retina_position_vertical]
		       [get object_two retina_position_vertical]]
		    [have object_one add_preposition `on object_two]]
		
		'...'
		
		]
	      [= object_iter_two [cdr object_iter_two]]]]
	  [= object_iter_one [cdr object_iter_one]]]]]
    semantic_knowledge_base]]






[deframe propogate_visual_objects_to_visual_knowledge_resource [resource] [visual_knowledge]
  [new []
       [construct resource `propogate_visual_objects_to_visual_knowledge
		  [funk []
			[let [[body [get this body]]]
			  [let [[visual_objects [get [get this mind] visual_objects]]]
			    [have this-resource think_to_self 'Propogating visual objects to visual knowledge.']
			    [let [[new_visual_knowledge [visual_semantic_knowledge-new_from_visual_objects visual_objects]]]
			      [= visual_knowledge new_visual_knowledge]
			      [mind-wait_to_activate [get this mind] deliberative reality include_learned_reactive_visual_knowledge_into_deliberative_knowledge]
			      [have this-resource think_to_self 'I created this knowledge: ' visual_knowledge '.']
			      ]]]]]
       nil]]


[deframe learned_reactive_sensory_agency [agency] []
  [new []
       [construct agency `sensory]
       
       [have this add_resource [new propogate_visual_objects_to_visual_knowledge_resource]]
       
       this]]




