'Copyright (c) 2007-2011 Bo Morgan.
 All rights reserved.
 
 Author: Bo Morgan
 
 Permission to use, copy, modify and distribute this software and its
 documentation is hereby granted, provided that both the copyright
 notice and this permission notice appear in all copies of the
 software, derivative works or modified versions, and any portions
 thereof, and that both notices appear in supporting documentation.
 
 BO MORGAN ALLOWS FREE USE OF THIS SOFTWARE IN ITS "AS IS" CONDITION.
 BO MORGAN DISCLAIMS ANY LIABILITY OF ANY KIND FOR ANY DAMAGES
 WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
 
 Bo Morgan requests users of this software to return to bo@mit.edu any
 improvements or extensions that they make and grant Bo Morgan the
 rights to redistribute these changes.'

[deframe moral_compass [reflective_mind] []
  [new []
       [terminal_format standard-terminal '\nmoral_compass: creating new mind.']
       [construct reflective_mind]
       [parog [have this add_layer [new builtin_reactive_layer]]
	      [have this add_layer [new learned_reactive_layer]]
	      [have this add_layer [new deliberative_layer]]
	      [have this add_layer [new reflective_layer]]
	      [have this add_layer [new self_reflective_layer]]
	      [have this add_layer [new self_conscious_layer]]]
       [type-have moral_compass this create_resources]
       [type-have moral_compass this create_knowledge]
       [type-have moral_compass this connect_knowledge_reflection]
       this]]

[deftypefunk moral_compass execute create_resources []
  [terminal_format standard-terminal '\nmoral_compass: creating resources.']
  
  ]

[deftypefunk moral_compass execute create_knowledge []
  [terminal_format standard-terminal '\nmoral_compass: creating knowledge.']
  [have [get this layer `self_reflective] create_knowledge]
  [have [get this layer `self_conscious]  create_knowledge]]

[deftypefunk moral_compass execute connect_knowledge_reflection []
  [terminal_format standard-terminal '\nmoral_compass: connecting knowledge reflection.']
  [have [get this layer `self_reflective] connect_knowledge_reflection]
  [have [get this layer `self_conscious]  connect_knowledge_reflection]]

