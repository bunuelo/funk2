'Copyright (c) 2007-2010 Bo Morgan.
 All rights reserved.
 
 Author: Bo Morgan
 
 Permission to use, copy, modify and distribute this software and its
 documentation is hereby granted, provided that both the copyright
 notice and this permission notice appear in all copies of the
 software, derivative works or modified versions, and any portions
 thereof, and that both notices appear in supporting documentation.
 
 BO MORGAN ALLOWS FREE USE OF THIS SOFTWARE IN ITS "AS IS" CONDITION.
 BO MORGAN DISCLAIMS ANY LIABILITY OF ANY KIND FOR ANY DAMAGES
 WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
 
 Bo Morgan requests users of this software to return to bo@mit.edu any
 improvements or extensions that they make and grant Bo Morgan the
 rights to redistribute these changes.'


[deframe reactive_physical_agency [agency] [[user_activate_resource nil]
					    [user_activate_args     nil]]
  [new []
       [construct agency `physical]
       
       `[have this add_resource [resource turn_right [steps]
					 [format stdout '\n  turn_right']
					 [let [[starting_time [get body time_step]]]			
					   [isis-call [get [get this world] client] turn_right-start agent [get this name]]
					   [while [< [- [get body time_step] starting_time] steps]
					     [millisleep 50]]
					   [isis-call [get [get this world] client] turn_right-stop agent [get this name]]]]]
       `[have this add_resource [resource physical turn_left [steps]
					 [format stdout '\n  turn_left']
					 [isis-call [get [get this world] client] turn_left-start agent [get this name]]
					 [let [[start_steps [get body time_step]]]
					   [while [< [- [get body time_step] start_steps] steps]
					     [millisleep 50]]
					   [isis-call [get [get this world] client] turn_left-stop agent [get this name]]]]]
	`[have this add_resource [resource look_right [steps]
					   [format stdout '\n  look_right']
					 [let [[starting_time [get body time_step]]]			
					   [isis-call [get [get this world] client] look_right-start agent [get this name]]
					   [while [< [- [get body time_step] starting_time] steps]
					     [millisleep 50]]
					   [isis-call [get [get this world] client] look_right-stop agent [get this name]]]]]
       `[have this add_resource [resource look_left [steps]
					 [format stdout '\n  turn_left']
					 [isis-call [get [get this world] client] look_left-start agent [get this name]]
					 [let [[start_steps [get body time_step]]]
					   [while [< [- [get body time_step] start_steps] steps]
					     [millisleep 50]]
					   [isis-call [get [get this world] client] look_left-stop agent [get this name]]]]]
       `[have this add_resource [resource move_forward [steps]
					 [format stdout '\n  move_forward']
					 [let [[start_steps [get body time_step]]]
					   [isis-call [get [get this world] client] move_forward-start agent [get this name]]
					   [while [< [- [get body time_step] start_steps] steps]
					     [millisleep 50]]
					   [isis-call [get [get this world] client] move_forward-stop agent [get this name]]]]]
       
       `[have this add_resource [resource move_backward [steps]
					 [format stdout '\n  move_backward']
					 [isis-call [get [get this world] client] move_backward-start agent [get this name]]
					 [let [[start_steps [get body time_step]]]
					   [while [< [- [get body time_step] start_steps] steps]
					     [millisleep 50]]
					   [isis-call [get [get this world] client] move_backward-stop agent [get this name]]]]]
       
       `[have this add_resource [resource drop_from_right_hand []
					 [format stdout '\n drop_from_right_hand']
					 [isis-call [get [get this world] client] drop_from_right_hand agent [get this name]]]]
       
       `[have this add_resource [resource pick_up_with_right_hand [target]
					 [format stdout '\n  pick_up_with_right_hand']
					 [while [null [get this sense]] 
					   [millisleep 100]]
					 [if [get this objects]
					     [if [have [get this objects] lookup target]
						 [if [> arm_length [have [have [get this objects] lookup target] `distance]]
						     [if [null [have [get this sense] lookup `right_hand]]
							 [isis-call [get [get this world] client] pick_up_with_right_hand agent [get this name] target target]
						       [mind-activate [get this mind] reactive physical drop_from_right_hand]]
						   [prog 
						    [mind-activate [get this mind] reactive physical walk_directly_towards target]
						    [isis-call [get [get this world] client] pick_up_with_right_hand agent [get this name] target target]]]
					       [prog 
						[mind-activate [get this mind] reactive physical walk_directly_towards target]
						[isis-call [get [get this world] client] pick_up_with_right_hand agent [get this name] target target]]]
					   [prog 
					    [mind-activate [get this mind] reactive physical walk_directly_towards target]
					    [isis-call [get [get this world] client] pick_up_with_right_hand agent [get this name] target target]]]
					 [get body sense]]]
       
       `[have this add_resource [resource drop_from_left_hand []
					 [format stdout '\n drop_from_left_hand']
					 [isis-call [get [get this world] client] drop_from_left_hand agent [get this name]]]]
       
       `[have this add_resource [resource pick_up_with_left_hand [target]
					 [format stdout '\n  pick_up_with_left_hand']
					 [while [null [get this sense]] 
					   [millisleep 100]]
					 [print 1]
					 [if [null [eq [have [get this sense] lookup `left_hand] target]]
					     [if [get this objects]
						 [if [have [get this objects] lookup target]
						     [if [> arm_length [have [have [get this objects] lookup target] lookup `distance]]
							 [if [null [have [get this sense] lookup `left_hand]]
							     [prog
							      [print 4]
							      [isis-call [get [get this world] client] pick_up_with_left_hand agent [get this name] target target]]
							   [prog 
							    [print 2]
							    [mind-activate [get this mind] reactive physical drop_from_left_hand]
							    [isis-call [get [get this world] client] pick_up_with_left_hand agent [get this name] target target]]]
						       [prog 
							[print 3]
							[mind-activate [get this mind] reactive physical walk_directly_towards target]
							[isis-call [get [get this world] client] pick_up_with_left_hand agent [get this name] target target]]]
						   [prog 
						    [mind-activate [get this mind] reactive physical walk_directly_towards target]
						    [isis-call [get [get this world] client] pick_up_with_left_hand agent [get this name] target target]]]
					       [prog 
						[mind-activate [get this mind] reactive physical walk_directly_towards target]
						[isis-call [get [get this world] client] pick_up_with_left_hand agent [get this name] target target]]]]
					 [get body sense]]]
       
       `[have this add_resource [resource open_fridge [fridge]
					 [format stdout '\n  open_fridge']
					 [while [null [get this sense]] 
					   [millisleep 100]]
					 [if [get this objects]
					     [if [have [get this objects] lookup fridge]
						 [if [> arm_length [have [get this objects] lookup `distance]]
						     [isis-call [get [get this world] client] agent [get this name] open_fridge]
						   [prog 
						    [mind-activate [get this mind] reactive physical walk_directly_towards fridge]
						    [isis-call [get [get this world] client] agent [get this name] open_fridge]]]
					       [prog 
						[mind-activate [get this mind] reactive physical walk_directly_towards fridge]
						[isis-call [get [get this world] client] agent [get this name] open_fridge]]]
					   [prog 
					    [mind-activate [get this mind] reactive physical walk_directly_towards fridge]
					    [isis-call [get [get this world] client] agent [get this name] open_fridge]]]
					 [get body sense]]]
       
       `[have this add_resource [resource slice_toast []
					 [format stdout '/n slice_toast']
					 [mind-activate [get this mind] reactive physical pick_up_with_left_hand knife]
					 [while [have [get this sense] lookup `left_hand]
					   [sleep 1]]
					 [mind-activate [get this mind] reactive physical walk_directly_towards loaf]
					 [while [get [get [get this mind] resource `reactive `physical `walk_directly_towards] active]
					   [sleep 1]]
					 [isis-call [get [get this world] client] agent [get this name] use_left_hand object knife target loaf]]]
       
       `[have this add_resource [resource center_body_on [desired_object]
					 [have this think_to_self 'center_body_on_object activated']
					 [labels [[turn_left_and_right []
								       [while [null [get this sense]] 
									 [millisleep 100]]
								       [if [get this objects]
									   [if [have [get this objects] lookup desired_object] 
									       [let [[x_pos [have [have [get this objects] lookup desired_object] lookup `x_pos]]]
										 [cond [[>  x_pos 0.4]
											[prog [have this think_to_self   'x too positive' x_pos]
											      [while [get [get [get this mind] resource `reactive `physical `turn_left] active]
												[millisleep 100]
												[have this think_to_self 'sleeping cus turn_left still activated']]
											      [mind-activate [get this mind] reactive physical turn_right 1]
											      [while [get [get [get this mind] resource `reactive `physical `turn_right] active]
												[millisleep 100]
												[have this think_to_self   'sleeping because turn_right still activated']]
											      [have this think_to_self   'i turned right']
											      [turn_left_and_right]]]
										       [[< x_pos [- 0 0.4]]
											[prog [have this think_to_self   'x too negative' x_pos]
											      [while [get [get [get this mind] resource `reactive `physical `turn_left] active]
												[millisleep 100]
												[have this think_to_self 'sleeping cus turn_left still activated']]
											      [mind-activate [get this mind] reactive physical turn_left 1]
											      [while [get [get [get this mind] resource `reactive `physical `turn_left] active]
												[millisleep 100]
												[have this think_to_self   'sleeping because turn_left still activated']]
											      [have this think_to_self 'i turned left']
											      [turn_left_and_right]]]
										       [t
											[have this think_to_self 'centered']]]]
									     [prog [have this think_to_self   'no objects in view']
										   [mind-activate [get this mind] reactive physical search_for desired_object]
										   [turn_left_and_right]]]
									 [prog [have this think_to_self   'my_object not in view']
									       [mind-activate [get this mind] reactive physical search_for desired_object]
									       [turn_left_and_right]]]]
						  [turn_left_and_right]]]]]
       
       `[have this add_resource [resource center_head_on [desired_object]
					 [print 'center_head_on_object']
					 [labels [[look_left_and_right []
								       [print '0']
								       [while [null [get this sense]] 
									 [millisleep 100]]
								       [if [get this objects]
									   [if [have [get this objects] lookup desired_object] 
									       [let [[y_pos [have [have [get this objects] lookup desired_object] lookup `y_pos]]]
										 [print 'let']
										 [cond [[>  y_pos 0.2]
											[prog [print 'y too positive']
											      [while [get [get [get this mind] resource `reactive `physical `turn_left] active]
												[millisleep 100]
												[have this think_to_self 'sleeping cus turn_left still activated']]
											      [mind-activate [get this mind] reactive physical look_left 1]
											      
											      [while [get [get [get this mind] resource `reactive `physical `look_left] active]
												[millisleep 100]
												[print 'sleeping cus resource still activated']]
											      [print 'i turned left']
											      [look_left_and_right]]]
										       [[<  y_pos [- 0 0.2]]
											[prog [print 'y too negative']
											      [mind-activate [get this mind] reactive physical look_right 1]
											      [while [get [get [get this mind] resource `reactive `physical `turn_left] active]
												[millisleep 100]
												[have this think_to_self 'sleeping cus turn_left still activated']]
											      [while [get [get [get this mind] resource `reactive `physical `look_right] active]
												[millisleep 100]
												[print 'sleeping cus resource still activated']]
											      [print 'i turned right']
											      [look_left_and_right]]]
										       [t
											[print 'centered']]]]
									     [mind-activate [get this mind] reactive physical search_for desired_object]]
									 [mind-activate [get this mind] reactive physical search_for desired_object]]]
						  [look_left_and_right]]]]]
       
       `[have this add_resource [resource walk_towards [desired_object]
					 [mind-activate [get this mind] reactive physical center_body_on desired_object]
					 [labels [[cautiously_walk []
								   [cond [[and [null [have this check_obstacle]] 
									       [< arm_length [have [have [get this objects] lookup desired_object] lookup `distance]]]
									  [prog [mind-activate [get this mind] reactive physical move_forward 1]
										[cautiously_walk]]]
									 [[> arm_length [have [have [get this objects] lookup desired_object] lookup `distance]]
									  nil]
									 [[and [have this check_obstacle] 
									       [< arm_length [have [have [get this objects] lookup desired_object] lookup `distance]]]
									  [mind-activate [get this mind] reactive physical avoid_obstacle desired_object [have this check_obstacle]]]
									 [t
									  [print 'weird, no conditions applied']]]]
						  [cautiously_walk]]]]]
       
       `[have this add_resource [resource walk_directly_towards [desired_object]
					 [let [[achieved nil]]
					   [have this think_to_self ' walk_directly_towards activated!']
					   [while  [null achieved]
					     [have this think_to_self ' not achieved']
					     [while [null [get this sense]]
					       [have this think_to_self ' sense not ready yet, sleep']
					       [millisleep 100]]
					     [if [get this objects]
						 [if [have [get this objects] lookup desired_object]
						     [if [< arm_length [have [have [get this objects] lookup desired_object] lookup `distance]]
							 [prog 
							  [while [null [get this sense]]
							    [have this think_to_self 'sense not ready yet, sleep']
							    [millisleep 100]]
							  [have this think_to_self 'current distance:' [have [have [get this objects] lookup desired_object] lookup `distance]]
							  [while [< arm_length [have [have [get this objects] lookup desired_object] lookup `distance]]
							    [have this think_to_self 'yes object, activating center on']
							    [mind-activate [get this mind] reactive physical center_body_on desired_object]
							    [while [get [get [get this mind] resource `reactive `physical `center_body_on] active]			
							      [millisleep 100]
							      [have this think_to_self 'sleep because center on still active']]
							    [have this think_to_self 'activating move_forward']
							    [mind-activate [get this mind] reactive physical move_forward 1]
							    [while [get [get [get this mind] resource `reactive `physical `move_forward] active]
							      [millisleep 100]
							      [have this think_to_self 'sleep because move forward still active']]
							    [print 'end of while loop']
							    [have this think_to_self 'current distance:' [have [have [get this objects] lookup desired_object] lookup `distance]]]
							  [have this think_to_self 'object within arm_length now']]
						       [prog [have this think_to_self 'finally got it']
							     [= achieved t]]]
						   [prog [have this think_to_self 'dont have object, activating search']
							 [mind-activate [get this mind] reactive physical search_for desired_object]
							 [while [get [get [get this mind] resource `reactive `physical `search_for] active]
							   [millisleep 200]
							   [have this think_to_self 'search still active']]]]   
					       [prog [have this think_to_self 'dont have object, activating search']
						     [mind-activate [get this mind] reactive physical search_for desired_object]
						     [while [get [get [get this mind] resource `reactive `physical `search_for] active]
						       [millisleep 200]
						       [have this think_to_self 'search still active']]]]]
					   [have this think_to_self 'finished walking towards']]]]
       
       
       'can move waiting for sense to finish in get sense/get object/timestep commands
why does it randomly exit the while loop/??'
       
       
       `[have this add_resource [resource search_for [desired_object]
					 [let [[patience 30]]
					   [have this think_to_self 'search_for activated']
					   [while 
					       [> patience 0]
					     [have this think_to_self 'I still have patience']
					     [while [null [get this sense]] 
					       [millisleep 100]]
					     [if [null [get this objects]]
						 [prog 
						  [have this think_to_self  'no objects in view']
						  [mind-activate [get this mind] reactive physical turn_left 1]
						  [while [get [get [get this mind] resource `reactive `physical `turn_left] active]
						    [millisleep 100]
						    [have this think_to_self 'sleeping because turn_left still activated']]]
					       [if [null [have [get this objects] lookup desired_object]]
						   [prog [have this think_to_self 'i see these objects:' [have [get this objects] lookup desired_object]]
							 [mind-activate [get this mind] reactive physical turn_left 1]
							 [while [get [get [get this mind] resource `reactive `physical `turn_left] active]
							   [millisleep 100]
							   [have this think_to_self 'sleeping cus turn_left still activated']]
							 [print 'activated turn-left']
							 [while [get [get [get this mind] resource `reactive `physical `turn_left] active]
							   [millisleep 100]
							   [have this think_to_self 'sleeping cus turn_left still activated']]
							 [= patience [- patience 1]]
							 [print 'at the end of while: ']]
						 [prog [= patience 0]
						       [have this think_to_self 'found it']]]]]
					   [have this think_to_self 'finished searching']]]]
       
       'problem now is lagg in perception, can fix by checking activeness of sensing resource?
      weird! step_simulation suddenly stopped controlling the simulator'
       
       `[have this add_resource [resource avoid_obstacle [desired_object obstacle]
					 [mind-activate [get this mind] reactive physical center_body_on desired_object]
					 [labels [[walk_around [if_left]
							       [mind-activate [get this mind] reactive physical center_body_on obstacle]
							       [let [[patience 30]]
								 [if if_left
								     [prog [mind-activate [get this mind] reactive physical turn_right 5]
									   [while [and [have this check_obstacle desired_object] [> patience 0]]
									     [mind-activate [get this mind] reactive physical move_forward 3]
									     [mind-activate [get this mind] reactive physical center_head_on obstacle]
									     [let [[distance [have [have [get this objects] lokup desired_object] lookup `distance]]]
									       [cond [[> distance 8]
										      [mind-activate [get this mind] reactive physical turn_left 2]]
										     [[> distance 2]
										      [mind-activate [get this mind] reactive physical turn_right 2]]
										     [t
										      [mind-activate [get this mind] reactive physical move_forward 2]]]
									       [mind-activate [get this mind] reactive physical search_for desired_object]
									       [= patience [patience -1]]]]]
								   [prog [mind-activate [get this mind] reactive physical turn_left 5]
									 [while [and [have this check_obstacle desired_object] [patience >0]]
									   [mind-activate [get this mind] reactive physical move_forward 3]
									   [mind-activate [get this mind] reactive physical center_head_on obstacle]
									   [let [[distance [have [have [get this objects] lookup desired_object] lookup `distance]]]
									     [cond [[> distance 8]
										    [mind-activate [get this mind] reactive physical turn_right 2]]
										   [[> distance 2]
										    [mind-activate [get this mind] reactive physical turn_left 2]]
										   [t
										    [mind-activate [get this mind] reactive physical move_forward 2]]]
									     [mind-activate [get this mind] reactive physical search_for desired_object]
									     [= patience [patience -1]]]]]]]]]
						 [walk_around [> 0 [have [have [get this objects] lookup obstacle] lookup `x_pos]]]]
					 [mind-activate [get this mind] reactive physical walk_directly_towards desired_object]]]
       
	[have this add_resource [resource funk_user []
					  [while t
					    `[print 'waiting for user to activate']
					     [if [null [get this user_activate_resource]]
						 [sleep 1]
					       [prog [have-apply mind activate [print `[reactive physical ,[get this user_activate_resource] @[get this user_activate_args]]]]
						     [set this user_activate_resource nil]
						     [set this user_activate_args nil]
						     ]]]]]
	
	this]]

