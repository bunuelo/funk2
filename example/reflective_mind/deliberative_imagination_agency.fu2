'Copyright (c) 2007-2012 Bo Morgan.
 All rights reserved.
 
 Author: Bo Morgan
 
 Permission to use, copy, modify and distribute this software and its
 documentation is hereby granted, provided that both the copyright
 notice and this permission notice appear in all copies of the
 software, derivative works or modified versions, and any portions
 thereof, and that both notices appear in supporting documentation.
 
 BO MORGAN ALLOWS FREE USE OF THIS SOFTWARE IN ITS "AS IS" CONDITION.
 BO MORGAN DISCLAIMS ANY LIABILITY OF ANY KIND FOR ANY DAMAGES
 WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
 
 Bo Morgan requests users of this software to return to bo@mit.edu any
 improvements or extensions that they make and grant Bo Morgan the
 rights to redistribute these changes.'



'deliberative_imagination_agency'

[deframe deliberative_imagination_agency [agency] []
  [new []
       [construct agency `imagination]
       
       [have this add_resource [new deliberative_imagine_plan_resource]]
       
       this]]

[deframe deliberative_imagine_plan_resource [deliberative_resource] []
  [new []
       [construct deliberative_resource `imagine_plan
		  [funk [semantic_plan]
			[assert-type semantic_plan_object semantic_plan]
			[terminal_format standard-terminal '\ndeliberative_layer: imagining plan.']
			[set [get [get [get this mind] agency `deliberative `plan] semantic_planner] imagine_plan semantic_plan]
			[let [[result [shelter [cause-define cause-name `plan]
					       [have [get semantic_plan nonsemantic_plan] imagine_eval]]]]
			  [if [is-type `bug result]
			      [let [[bug              result]
				    [semantic_planner [get [get [get this mind] agency `deliberative `plan] semantic_planner]]]
				[terminal_format standard-terminal '\ndeliberative_layer: imagining plan has a bug.']
				[set semantic_planner imagine_plan nil]
				]
			    [prog [terminal_format standard-terminal '\ndeliberative_layer: successfully completed imagining plan.']
				  [set [get [get [get this mind] agency `deliberative `plan] semantic_planner] imagine_plan nil]]]]
			nil]]
       nil]]


