'Copyright (c) 2007-2011 Bo Morgan.
 All rights reserved.
 
 Author: Bo Morgan
 
 Permission to use, copy, modify and distribute this software and its
 documentation is hereby granted, provided that both the copyright
 notice and this permission notice appear in all copies of the
 software, derivative works or modified versions, and any portions
 thereof, and that both notices appear in supporting documentation.
 
 BO MORGAN ALLOWS FREE USE OF THIS SOFTWARE IN ITS "AS IS" CONDITION.
 BO MORGAN DISCLAIMS ANY LIABILITY OF ANY KIND FOR ANY DAMAGES
 WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
 
 Bo Morgan requests users of this software to return to bo@mit.edu any
 improvements or extensions that they make and grant Bo Morgan the
 rights to redistribute these changes.'


'deliberative_layer'

[deframe deliberative_layer [mental_layer] [[physical_action_english_symbol_ptypehash [new ptypehash]]
					    [physical_plans                           nil]]
  [new []
       [construct mental_layer 2 `deliberative]
       [parog [have this add_agency [new deliberative_execution_agency]]
	      [have this add_agency [new deliberative_physical_object_type_goal_agency]]]
       this]]

[deftypefunk deliberative_layer execute create_knowledge []
  [have [get this agency `physical_object_type_goal] create_knowledge]]

[deftypefunk deliberative_layer execute connect_knowledge_reflection []
  [have [get this agency `physical_object_type_goal] connect_knowledge_reflection]]

[deftypefunk deliberative_layer execute create_physical_type_relationship_goal [source_physical_object_type key_type key target_physical_object_type]
  [have [get this agency `physical_object_type_goal] create_physical_type_relationship_goal source_physical_object_type key_type key target_physical_object_type]]

[deftypefunk deliberative_layer execute create_physical_type_property_relationship_goal [source_type
											 source_type_property
											 source_type_property_value
											 key_type
											 key
											 target_type
											 target_type_property
											 target_type_property_value]
  [have [get this agency `physical_object_type_goal] create_physical_type_property_relationship_goal
	source_type
	source_type_property
	source_type_property_value
	key_type
	key
	target_type
	target_type_property
	target_type_property_value]]

[deftypefunk deliberative_layer execute add_physical_action [action]
  [terminal_format standard-terminal '\ndeliberative_layer: adding physical action, "' [get action as-string] '."']
  [have physical_action_english_symbol_ptypehash add [get action as-english_symbol] action]]

[deftypefunk deliberative_layer execute lookup_physical_action [english_conslist]
  [have physical_action_english_symbol_ptypehash lookup [conslist-as-english_symbol english_conslist]]]

[deftypefunk deliberative_layer execute add_physical_plan [plan]
  [terminal_format standard-terminal '\ndeliberative_layer: adding physical plan, "' [get plan as-string] '."']
  [= physical_plans [cons plan physical_plans]]]

[deftypefunk deliberative_layer execute create_physical_action [layer_name agency_name resource_name :rest resource_arguments]
  [let [[action [new deliberative_action 
		     [get this mind]
		     layer_name
		     agency_name
		     resource_name
		     resource_arguments]]]
    [have this add_physical_action action]]]

[deftypefunk deliberative_layer execute create_physical_plan [expression]
  [let [[plan [new deliberative_plan 
		   [get this mind]
		   expression]]]
    [have this add_physical_plan plan]]]


  



