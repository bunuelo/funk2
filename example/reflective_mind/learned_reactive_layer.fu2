'Copyright (c) 2007-2012 Bo Morgan.
 All rights reserved.
 
 Author: Bo Morgan
 
 Permission to use, copy, modify and distribute this software and its
 documentation is hereby granted, provided that both the copyright
 notice and this permission notice appear in all copies of the
 software, derivative works or modified versions, and any portions
 thereof, and that both notices appear in supporting documentation.
 
 BO MORGAN ALLOWS FREE USE OF THIS SOFTWARE IN ITS "AS IS" CONDITION.
 BO MORGAN DISCLAIMS ANY LIABILITY OF ANY KIND FOR ANY DAMAGES
 WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
 
 Bo Morgan requests users of this software to return to bo@mit.edu any
 improvements or extensions that they make and grant Bo Morgan the
 rights to redistribute these changes.'


'learned_reactive_layer'

[deframe learned_reactive_layer [mental_layer controllable_object] [[semantic_visual_object_name_hash [new ptypehash]]]
  [new []
       [construct controllable_object
		  `physical_knowledge]
       [construct mental_layer 1 `learned_reactive]
       [parog [have this add_agency [new learned_reactive_sensory_agency]]
	      [have this add_agency [new learned_reactive_physical_agency]]
	      [have this add_agency [new learned_reactive_language_agency]]
	      [have this add_agency [new learned_reactive_physical_knowledge_agency]]]]]

[deftypefunk learned_reactive_layer get semantic_visual_object [visual_object_name]
  [let [[semantic_visual_object [have semantic_visual_object_name_hash lookup visual_object_name]]]
    [if [null semantic_visual_object]
	[let [[new_semantic_visual_object [new semantic_frame [get [get this mind] semantic_realm]]]]
	  [have new_semantic_visual_object add `property `category `visual_object]
	  [have semantic_visual_object_name_hash add visual_object_name new_semantic_visual_object]
	  [have [get [get this mind] learned_reactive_knowledge] add_semantic_frame new_semantic_visual_object]
	  [= semantic_visual_object new_semantic_visual_object]]]
    semantic_visual_object]]

[deftypefunk learned_reactive_layer execute create_knowledge []
  [type-have controllable_object this create_knowledge]]

[deftypefunk learned_reactive_layer execute connect_knowledge_reflection []
  [have [get this agency `physical_knowledge] connect_knowledge_reflection]
  ]

[deftypefunk learned_reactive_layer execute check_exists [semantic_partial_state]
  [have [get this agency `physical_knowledge] check_exists semantic_partial_state]]

[deftypefunk learned_reactive_layer execute wait_for_partial_state_to_exist [semantic_partial_state]
  [have [get this agency `physical_knowledge] wait_for_partial_state_to_exist semantic_partial_state]]

[deftypefunk learned_reactive_layer execute wait_for_physical_knowledge_step [wait_for_step]
  [have [get this agency `physical_knowledge] wait_for_physical_knowledge_step wait_for_step]]

