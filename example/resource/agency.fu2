'Copyright (c) 2007-2010 Bo Morgan.
 All rights reserved.
 
 Author: Bo Morgan
 
 Permission to use, copy, modify and distribute this software and its
 documentation is hereby granted, provided that both the copyright
 notice and this permission notice appear in all copies of the
 software, derivative works or modified versions, and any portions
 thereof, and that both notices appear in supporting documentation.
 
 BO MORGAN ALLOWS FREE USE OF THIS SOFTWARE IN ITS "AS IS" CONDITION.
 BO MORGAN DISCLAIMS ANY LIABILITY OF ANY KIND FOR ANY DAMAGES
 WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
 
 Bo Morgan requests users of this software to return to bo@mit.edu any
 improvements or extensions that they make and grant Bo Morgan the
 rights to redistribute these changes.'


'agency'

[deframe          agency [frame] [name resource_frame knowledge trace_story]]
[deftypeconstruct agency [name]
  [set this name           name]
  [set this resource_frame [frame]]
  [set this knowledge      [new propogator_resource `knowledge]]
  [set this trace_story    [new story]]
  [have this add_resource [get [get this knowledge] resource]]
  this]

[deftypefunk agency execute add_resource [resource]
  [have [get this resource_frame] add [get resource name] resource]]

[deftypefunk agency get resource [name]
  [have [get this resource_frame] lookup name]]

[deftypefunk agency execute call [name :rest args]
  [have [get this story] add_new_event cause-time_step cause-name `calls name]
  [format stdout '\n\ncreating this story in agency: ' [get this story] '\n\n']
  [let [[resource [get this resource name]]]
    [have-apply resource call `[,cause-outside_resource @args]]]]

[deftypefunk agency execute activate [name :rest args]
  [let [[resource [get this resource name]]]
    [have-apply resource activate `[,cause-outside_resource @args]]]]

[deftypefunk agency get resources []
  [get [get this resource_frame] values]]

