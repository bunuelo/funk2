'Copyright (c) 2007-2010 Bo Morgan.
 All rights reserved.
 
 Author: Bo Morgan
 
 Permission to use, copy, modify and distribute this software and its
 documentation is hereby granted, provided that both the copyright
 notice and this permission notice appear in all copies of the
 software, derivative works or modified versions, and any portions
 thereof, and that both notices appear in supporting documentation.
 
 BO MORGAN ALLOWS FREE USE OF THIS SOFTWARE IN ITS "AS IS" CONDITION.
 BO MORGAN DISCLAIMS ANY LIABILITY OF ANY KIND FOR ANY DAMAGES
 WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
 
 Bo Morgan requests users of this software to return to bo@mit.edu any
 improvements or extensions that they make and grant Bo Morgan the
 rights to redistribute these changes.'


'agency'

[deframe          agency [frame] [name layer resource_frame knowledge trace_story]]
[deftypeconstruct agency [name]
  [set this name           name]
  [set this layer          nil] 'We set this when we add the resource to a layer.'
  [set this resource_frame [frame]]
  [set this knowledge      [new propogator_resource [get [format nil name '_agency_knowledge'] as-symbol]]]
  [set this trace_story    [new story]]
  [have this add_resource [get [get this knowledge] resource]]
  this]

[deftypefunk agency execute add_resource [resource]
  [if [get resource agency]
      [error bug_type `resource_already_part_of_an_agency resource resource agency this]]
  [set resource agency this]
  [have [get this resource_frame] add [get resource name] resource]]

[deftypefunk agency get resource [name]
  [have [get this resource_frame] lookup name]]

[deftypefunk agency execute call [name :rest args]
  [let [[resource [get this resource name]]]
    [have-apply resource call args]]]

[deftypefunk agency execute activate [name :rest args]
  [let [[resource [get this resource name]]]
    [have-apply resource activate args]]]

[deftypefunk agency get resources []
  [get [get this resource_frame] values]]

[deftypefunk agency get resource_names []
  [get [get this resource_frame] slots]]

[deftypefunk agency get resource_count []
  [simple_length [get this resources]]]

