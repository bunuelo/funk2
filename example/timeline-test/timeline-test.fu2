'Copyright (c) 2007-2011 Bo Morgan.
 All rights reserved.
 
 Author: Bo Morgan
 
 Permission to use, copy, modify and distribute this software and its
 documentation is hereby granted, provided that both the copyright
 notice and this permission notice appear in all copies of the
 software, derivative works or modified versions, and any portions
 thereof, and that both notices appear in supporting documentation.
 
 BO MORGAN ALLOWS FREE USE OF THIS SOFTWARE IN ITS "AS IS" CONDITION.
 BO MORGAN DISCLAIMS ANY LIABILITY OF ANY KIND FOR ANY DAMAGES
 WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
 
 Bo Morgan requests users of this software to return to bo@mit.edu any
 improvements or extensions that they make and grant Bo Morgan the
 rights to redistribute these changes.'


[defunk timeline-test []
  [let [[timeline         [new timeline]]
	[timeline_event_a [new timeline_event `a [time] [time]]]
	[timeline_event_b [new timeline_event `b [time] [time]]]
	[timeline_event_c [new timeline_event `c [time] [time]]]
	[timeline_event_d [new timeline_event `d [time] [time]]]
	[timeline_event_e [new timeline_event `e [time] [time]]]
	[timeline_event_f [new timeline_event `f [time] [time]]]]
    
    [have timeline add_timeline_event timeline_event_a]
    [have timeline add_timeline_event timeline_event_b]
    [have timeline add_timeline_event timeline_event_c]
    [have timeline add_timeline_event timeline_event_d]
    [have timeline add_timeline_event timeline_event_e]
    [have timeline add_timeline_event timeline_event_f]
    `[semantic-add timeline_event_a contains timeline_event_b]
    `[semantic-add timeline_event_a contains timeline_event_c]
    `[semantic-add timeline_event_b next     timeline_event_c]
    `[semantic-add timeline_event_d contains timeline_event_e]
    `[semantic-add timeline_event_d contains timeline_event_f]
    `[semantic-add timeline_event_e next     timeline_event_f]
    
    [let* [[cairo_surface [new cairo_pdf_surface 'timeline-test.pdf' 72.0 72.0]]
	   [cairo_context [new cairo_context cairo_surface]]]
      [have cairo_context scale 72.0 72.0]
      [have cairo_context move_to 0.0 0.0]
      [have timeline cairo_render cairo_context]
      [have cairo_context destroy]
      [have cairo_surface destroy]]
    
    nil]]

[defunk timeline-retry []
  [require timeline-test]
  [global_core_extension_handler-unload_changed]
  [timeline-test]]


