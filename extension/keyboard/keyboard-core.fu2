'Copyright (c) 2007-2012 Bo Morgan.
 All rights reserved.
 
 Author: Bo Morgan
 
 Permission to use, copy, modify and distribute this software and its
 documentation is hereby granted, provided that both the copyright
 notice and this permission notice appear in all copies of the
 software, derivative works or modified versions, and any portions
 thereof, and that both notices appear in supporting documentation.
 
 BO MORGAN ALLOWS FREE USE OF THIS SOFTWARE IN ITS "AS IS" CONDITION.
 BO MORGAN DISCLAIMS ANY LIABILITY OF ANY KIND FOR ANY DAMAGES
 WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
 
 Bo Morgan requests users of this software to return to bo@mit.edu any
 improvements or extensions that they make and grant Bo Morgan the
 rights to redistribute these changes.'

[defcorefunk keyboard-current_mode             keyboard keyboard__current_mode]
[defcorefunk keyboard-current_mode-set         keyboard keyboard__current_mode__set]
[defcorefunk keyboard-enable_noncanonical_mode keyboard keyboard__enable_noncanonical_mode]
[defcorefunk keyboard-try_read_byte            keyboard keyboard__try_read_byte]
[defcorefunk keyboard-try_read_character       keyboard keyboard__try_read_character]
[defcorefunk keyboard-check_keypress           keyboard keyboard__check_keypress]

[defcorefunk keyboard_editor-insert_char keyboard keyboard_editor__insert_char]

[defcorefunk keyboard-core_extension-ping         keyboard keyboard__core_extension__ping]
[defcorefunk keyboard-core_extension-define_types keyboard keyboard__core_extension__define_types]
[defcorefunk keyboard-core_extension-initialize   keyboard keyboard__core_extension__initialize]

[keyboard-core_extension-define_types]

[defunk keyboard-read_byte []
  [let [[old_opts [keyboard-current_mode]]]
    [keyboard-enable_noncanonical_mode]
    [let [[b nil]]
      [while [null b]
	[= b [keyboard-try_read_byte]]
	[if [null b]
	    [millisleep 100]]]
      [keyboard-current_mode-set old_opts]
      b]]]

[defunk keyboard-read_character []
  [let [[old_opts [keyboard-current_mode]]]
    [keyboard-enable_noncanonical_mode]
    [let [[ch nil]]
      [while [null ch]
	[= ch [keyboard-try_read_character]]
	[if [null ch]
	    [millisleep 100]]]
      [keyboard-current_mode-set old_opts]
      ch]]]

