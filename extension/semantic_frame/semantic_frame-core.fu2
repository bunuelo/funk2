'Copyright (c) 2007-2012 Bo Morgan.
 All rights reserved.
 
 Author: Bo Morgan
 
 Permission to use, copy, modify and distribute this software and its
 documentation is hereby granted, provided that both the copyright
 notice and this permission notice appear in all copies of the
 software, derivative works or modified versions, and any portions
 thereof, and that both notices appear in supporting documentation.
 
 BO MORGAN ALLOWS FREE USE OF THIS SOFTWARE IN ITS "AS IS" CONDITION.
 BO MORGAN DISCLAIMS ANY LIABILITY OF ANY KIND FOR ANY DAMAGES
 WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
 
 Bo Morgan requests users of this software to return to bo@mit.edu any
 improvements or extensions that they make and grant Bo Morgan the
 rights to redistribute these changes.'

[defcorefunk semantic_frame-core_extension-ping         semantic_frame semantic_frame__core_extension__ping]
[defcorefunk semantic_frame-core_extension-initialize   semantic_frame semantic_frame__core_extension__initialize]
[defcorefunk semantic_frame-core_extension-define_types semantic_frame semantic_frame__core_extension__define_types]

[defcorefunk object-semantic-lookup_set       semantic_frame object__semantic__lookup_set]
[defcorefunk object-semantic-lookup_set-apply semantic_frame object__semantic__lookup_set__apply]
[defcorefunk object-semantic-add              semantic_frame object__semantic__add]
[defcorefunk object-semantic-add-apply        semantic_frame object__semantic__add__apply]
[defcorefunk object-semantic-remove           semantic_frame object__semantic__remove]
[defcorefunk object-semantic-remove-apply     semantic_frame object__semantic__remove__apply]

[semantic_frame-core_extension-define_types]


[defmetro semantic-lookup_set       [this slot_name :rest args] `[object-semantic-lookup_set       ,this [quote ,slot_name] @args]]
[defmetro semantic-lookup_set-apply [this slot_name       args] `[object-semantic-lookup_set-apply ,this [quote ,slot_name] ,args]]
[defmetro semantic-add              [this slot_name :rest args] `[object-semantic-add              ,this [quote ,slot_name] @args]]
[defmetro semantic-add-apply        [this slot_name       args] `[object-semantic-add-apply        ,this [quote ,slot_name] ,args]]
[defmetro semantic-remove           [this slot_name :rest args] `[object-semantic-remove           ,this [quote ,slot_name] @args]]
[defmetro semantic-remove-apply     [this slot_name       args] `[object-semantic-remove-apply     ,this [quote ,slot_name] ,args]]

[deftypefunk semantic_frame execute map_type_key_values [type_key_value_funk]
  [have frame map_type_key_values [funk [key_type key value_set]
					[mapc [funk [value]
						    [funkall type_key_value_funk key_type key value]]
					      [get value_set elements]]]]]

[deftypefunk semantic_frame execute map_key_values [key_type type_key_value_funk]
  [have frame map_key_values key_type [funk [key value_set]
					    [mapc [funk [value]
							[funkall type_key_value_funk key value]]
						  [get value_set elements]]]]]

[deftypefunk semantic_frame execute map_reverse_type_key_values [type_key_value_funk]
  [have reverse_frame map_type_key_values [funk [type key value_set]
						[mapc [funk [value]
							    [funkall type_key_value_funk type key value]]
						      [get value_set elements]]]]]
