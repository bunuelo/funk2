'Copyright (c) 2007-2011 Bo Morgan.
 All rights reserved.
 
 Author: Bo Morgan
 
 Permission to use, copy, modify and distribute this software and its
 documentation is hereby granted, provided that both the copyright
 notice and this permission notice appear in all copies of the
 software, derivative works or modified versions, and any portions
 thereof, and that both notices appear in supporting documentation.
 
 BO MORGAN ALLOWS FREE USE OF THIS SOFTWARE IN ITS "AS IS" CONDITION.
 BO MORGAN DISCLAIMS ANY LIABILITY OF ANY KIND FOR ANY DAMAGES
 WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
 
 Bo Morgan requests users of this software to return to bo@mit.edu any
 improvements or extensions that they make and grant Bo Morgan the
 rights to redistribute these changes.'

[defcore semantic_knowledge_base 'extension/semantic_knowledge_base/.libs/libf2e_semantic_knowledge_base.so']

[defcorefunk semantic_knowledge_base-core_extension_ping       semantic_knowledge_base semantic_knowledge_base__core_extension_ping]
[defcorefunk semantic_knowledge_base-core_extension_initialize semantic_knowledge_base semantic_knowledge_base__core_extension_initialize]

[defcorefunk object-semantic-add          semantic_knowledge_base object__semantic__add]
[defcorefunk object-semantic-add-apply    semantic_knowledge_base object__semantic__add__apply]
[defcorefunk object-semantic-remove       semantic_knowledge_base object__semantic__remove]
[defcorefunk object-semantic-remove-apply semantic_knowledge_base object__semantic__remove__apply]

[semantic_knowledge_base-core_extension_ping]


[defmetro semantic-lookup       [this slot_name :rest args] `[object-semantic-lookup       ,this [quote ,slot_name] @args]]
[defmetro semantic-lookup-apply [this slot_name       args] `[object-semantic-lookup-apply ,this [quote ,slot_name] ,args]]
[defmetro semantic-add          [this slot_name :rest args] `[object-semantic-add          ,this [quote ,slot_name] @args]]
[defmetro semantic-add-apply    [this slot_name       args] `[object-semantic-add-apply    ,this [quote ,slot_name] ,args]]
[defmetro semantic-remove       [this slot_name :rest args] `[object-semantic-remove       ,this [quote ,slot_name] @args]]
[defmetro semantic-remove-apply [this slot_name       args] `[object-semantic-remove-apply ,this [quote ,slot_name] ,args]]


[defmetro semantic-is-type [type_name object]
  `[get ,object is_semantic_type ,type_name]]

