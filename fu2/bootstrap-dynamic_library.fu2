'Copyright (c) 2007-2011 Bo Morgan.
 All rights reserved.
 
 Author: Bo Morgan
 
 Permission to use, copy, modify and distribute this software and its
 documentation is hereby granted, provided that both the copyright
 notice and this permission notice appear in all copies of the
 software, derivative works or modified versions, and any portions
 thereof, and that both notices appear in supporting documentation.
 
 BO MORGAN ALLOWS FREE USE OF THIS SOFTWARE IN ITS "AS IS" CONDITION.
 BO MORGAN DISCLAIMS ANY LIABILITY OF ANY KIND FOR ANY DAMAGES
 WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
 
 Bo Morgan requests users of this software to return to bo@mit.edu any
 improvements or extensions that they make and grant Bo Morgan the
 rights to redistribute these changes.'

[globalize -dynamic_library-name-hash- [hashtable-new 10]]

[defunk   dynamic_library-new                    [name library_file_directory library_file_name system_dlfcn system_gmodule]  [array `dynamic_library name library_file_directory library_file_name system_dlfcn system_gmodule]]
[defmetro dynamic_library-name                   [this]                                                                      `[array-elt     ,this 1]]
[defmetro dynamic_library-library_file_directory [this]                                                                      `[array-elt     ,this 2]]
[defmetro dynamic_library-library_file_name      [this]                                                                      `[array-elt     ,this 3]]
[defmetro dynamic_library-system_dlfcn           [this]                                                                      `[array-elt     ,this 4]]
[defmetro dynamic_library-system_dlfcn-set       [this value]                                                                `[array-elt-set ,this 4 ,value]]
[defmetro dynamic_library-system_gmodule         [this]                                                                      `[array-elt     ,this 5]]
[defmetro dynamic_library-system_gmodule-set     [this value]                                                                `[array-elt-set ,this 5 ,value]]

[defunk dynamic_library-lookup [name]
  [hashtable-lookup_value -dynamic_library-hash-name- name]]

[defunk dynamic_library-init_library [name]
  [let [[dynamic_library [dynamic_library-lookup name]]]
    [let [[library_file_directory [dynamic_library-library_file_directory dynamic_library]]
	  [library_file_name      [dynamic_library-library_file_name      dynamic_library]]]
      [cond [[dlfcn-supported]   [if [null [dynamic_library-system_dlfcn dynamic_library]]
				     [let [[system_dlfcn [dlfcn-dlopen library_file_name [dlfcn-rtld_now]]]]
				       [dynamic_library-system_dlfcn-set   dynamic_library system_dlfcn]
				       [if [null system_dlfcn]   [error `loading-dlfcn   `[loading dynamic library]]]]]]
	    [[gmodule-supported] [if [null [dynamic_library-system_gmodule dynamic_library]]
				     [let [[system_gmodule [gmodule-open [gmodule-build_path library_file_directory library_file_name] 0]]]
				       [dynamic_library-system_gmodule-set dynamic_library system_gmodule]
				       [if [null system_gmodule] [error `loading-gmodule `[loading dynamic library]]]]]]
	    [t                   [error `run-time `[no dynamic library loader is supported, try enabling dlfcn or gmodule during compile]]]]]]]

[defmetro defdylib [name library_file_directory library_file_name]
  [let [[dynamic_library [dynamic_library-new name library_file_directory library_file_name nil nil]]]
    [hashtable-add_keyvalue_pair -dynamic_library-name-hash- name dynamic_library]]]

[defmetro defalien [name dylib_name return_type c_name argument_name_type_pairs]
  `[defunk-alien [dynamic_library-lookup dylib_name] ,name ,return_type ,c_name ,argument_type_name_pairs]]

