'Copyright (c) 2007-2010 Bo Morgan.
 All rights reserved.
 
 Author: Bo Morgan
 
 Permission to use, copy, modify and distribute this software and its
 documentation is hereby granted, provided that both the copyright
 notice and this permission notice appear in all copies of the
 software, derivative works or modified versions, and any portions
 thereof, and that both notices appear in supporting documentation.
 
 BO MORGAN ALLOWS FREE USE OF THIS SOFTWARE IN ITS "AS IS" CONDITION.
 BO MORGAN DISCLAIMS ANY LIABILITY OF ANY KIND FOR ANY DAMAGES
 WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
 
 Bo Morgan requests users of this software to return to bo@mit.edu any
 improvements or extensions that they make and grant Bo Morgan the
 rights to redistribute these changes.'

[deftypefunk bruno_graph get edges_between_nodes              [left_node right_node] 
  [bruno_graph-edges_between_nodes this left_node right_node]]
[deftypefunk ecs_edit_sequence execute add                    [type from to cost_function] 
  [ecs_edit_sequence-add this type from to cost_function]]
[deftypefunk ecs_edit_sequence execute add_mapping            [left_node right_node] 
  [ecs_edit_sequence-add_mapping this left_node right_node]]
[deftypefunk ecs_edit_sequence get combine                    [that lattice_node graph cost_function] 
  [ecs_edit_sequence-combine this that lattice_node graph cost_function]]
[deftypefunk bruno_decomposition_lattice get ecs_isomorphisms [graph cost_function] 
  [bruno_decomposition_lattice-ecs_isomorphisms this graph cost_function]]

[deftypefunk bruno_graph execute gview []
  [let [[graph         [new graph]]
        [node_list     [get [get this node_set] elements]]
        [edge_list     [get [get this edge_set] elements]]
        [node_hash_b_g [new ptypehash]]
        [i             0]]
    [mapc [funk [b_node]
                [let [[uguu [+ [get [get b_node label] as-string] ' (' [get i as-string] ')']]]
                  [have node_hash_b_g add b_node uguu]
                  [= i [+ i 1]]
                  [have graph add_node uguu]]]
          node_list]
    `[print graph]
    [mapc [funk [b_edge]
                [have graph add_edge 
                      [get b_edge label]
                      [have node_hash_b_g lookup [get b_edge left_node]] 
                      [have node_hash_b_g lookup [get b_edge right_node]]]]
          edge_list]
    `[print graph]
    [have graph gview]]]