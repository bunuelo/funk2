'Copyright (c) 2007-2013 Bo Morgan.
 All rights reserved.
 
 Authors:
 
   Bo Morgan (2007-2013): Initial implementation.
 
 This program is distributed under the terms of the GNU General
 Public License.  See the COPYING file that is distributed with this
 file.
 
 Permission to use, copy, modify and distribute this software and its
 documentation is hereby granted, provided that both the copyright
 notice and this permission notice appear in all copies of the
 software, derivative works or modified versions, and any portions
 thereof, and that both notices appear in supporting documentation.
 
 BO MORGAN ALLOWS FREE USE OF THIS SOFTWARE IN ITS "AS IS" CONDITION.
 BO MORGAN DISCLAIMS ANY LIABILITY OF ANY KIND FOR ANY DAMAGES
 WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
 
 Bo Morgan requests users of this software to return to bo@mit.edu any
 improvements or extensions that they make and grant Bo Morgan the
 rights to redistribute these changes.
'

[defunk graphviz_digraph [name :rest codes]
  [string-prog
   'digraph G {'
   [stringlist-prog codes]
   '}']]

[defunk graphviz_node_ex [fillcolor color style]
  [format nil 'node [fillcolor = ' fillcolor ', color = ' color ', style = ' filled '];']]

[defunk graphviz_node [color]
  [format nil 'node [color = ' color '];']]

[defunk graphviz_edge [color]
  [format nil 'edge [color = ' color '];']]

[defunk graphviz_-> [:rest nodes]
  [format nil [stringlist-intersperse [mapcar [funk [x] [format nil x]] nodes] ' -> '] ';']]

[defunk graphviz_draw_node [name label]
  [format nil name ' [label = ' label '];']]

[defunk graphviz_draw_node_ex [name label shape style height width]
  [format nil name ' [shape=' shape ',style=' style ',label=' label ',height=' height ',width=' width '];']]





[globalize neurominde_svn-directory '/home/neptune/Desktop/neurominde-svn/']

[defunk phdproposal_root_dir []
  [format nil neurominde_svn-directory 'home/neptune/Desktop/papers/phdproposal/']]

[globalize phdproposal-reactive_color        '#000000']
[globalize phdproposal-deliberative_color    '#0000CC']
[globalize phdproposal-reflective_color      '#008800']
[globalize phdproposal-self_reflective_color '#CC0000']
[globalize phdproposal-self_conscious_color  '#CC00CC']

[defunk   reactive_relation?           [exp]                             [and exp [cons? exp] [eq [car exp] `reactive_relation]]]
[defunk   reactive_relation-new        [relation object_one object_two]  [list `reactive_relation relation object_one object_two]]
[defmetro reactive_relation-relation   [this]                           `[elt  ,this 1]]
[defmetro reactive_relation-object_one [this]                           `[elt  ,this 2]]
[defmetro reactive_relation-object_two [this]                           `[elt  ,this 3]]

[defunk exp-to_symbol_string [exp]
  [string-replace_all
   [string-replace_all
    [format nil exp]
    ' ' '_']
   '-' '_']]

[defunk reactive_object-to_symbol_string [exp]
  [exp-to_symbol_string exp]]

[defunk reactive_relation-to_symbol_string [this]
  [format nil
	  [reactive_object-to_symbol_string [reactive_relation-object_one this]]
	  '_'
	  [reactive_object-to_symbol_string [reactive_relation-relation   this]]
	  '_'
	  [reactive_object-to_symbol_string [reactive_relation-object_two this]]]]




[defunk phdproposal-model_6-dot []
  [let [[rr-clean_clothes [reactive_relation-new 'attain-property' 'my-clothes' 'clean']]
	[rr-dirty_clothes [reactive_relation-new 'attain-property' 'my-clothes' 'dirty']]]
    [let [[reactive_relations [list rr-dirty_clothes
				    rr-clean_clothes]]]
      [graphviz_digraph 'G'
			[format nil 'node [fillcolor = white, color = "' phdproposal-reactive_color '", style = filled];']
			[format nil 'edge [color = "' phdproposal-reactive_color '"];']
			
			[stringlist-prog [let [[code_seq nil]]
					   [mapc [funk [reactive_relation]
						       [let [[relation   [reactive_relation-relation   reactive_relation]]
							     [object_one [reactive_relation-object_one reactive_relation]]
							     [object_two [reactive_relation-object_two reactive_relation]]]
							 [= code_seq [append code_seq [list [format nil [reactive_object-to_symbol_string   object_one]        ' [label = "'                       object_one '\\n(reactive)"];']]]]
							 [= code_seq [append code_seq [list [format nil [reactive_object-to_symbol_string   object_two]        ' [label = \\"~A\\n(reactive)\\"];' object_two]]]]
							 [= code_seq [append code_seq [list [format nil [reactive_relation-to_symbol_string reactive_relation] ' [shape=box,style=filled,label="'  relation   '",height=.1,width=.1];']]]]
							 [= code_seq [append code_seq [list [format nil [reactive_object-to_symbol_string   object_one] ' -> ' [reactive_relation-to_symbol_string reactive_relation] ' -> ' [reactive_object-to_symbol_string object_two] ';']]]]
							 
							 ]]
						 reactive_relations]
					   code_seq]]
			]]]]

[defunk graphviz-test []
  [let [[model_6 [graphviz_digraph 'G'
				   
				   '// reactive'
				   [graphviz_node '"#000000"']
				   [graphviz_edge '"#000000"']
				   
				   [graphviz_draw_node 'my-clothes' '"my-clothes\\n(reactive)"']
				   [graphviz_draw_node 'dirty' '"dirty\\n(reactive)"']
				   'my_clothes_attain_property_dirty [shape=box,style=filled,label="attain-property",height=.1,width=.1];'
				   'my_clothes -> my_clothes_attain_property_dirty -> dirty;'
				   [graphviz_draw_node 'my-clothes' '"my-clothes\\n(reactive)"']
				   [graphviz_draw_node 'clean' '"clean\\n(reactive)"']
				   'my_clothes_attain_property_clean [shape=box,style=filled,label="attain-property",height=.1,width=.1];'
				   'my_clothes -> my_clothes_attain_property_clean -> clean;'
				   
				   
				   
				   '// deliberative'
				   [graphviz_node 'white' '"#0000CC"' 'filled']
				   [graphviz_edge '"#0000CC"']
				   'I_deliberative [label = "I\\n(deliberative)"];'
				   
				   
				   'I_want_my_clothes_attain_property_clean [shape=box,style=filled,label="want",height=.1,width=.1] ;'
				   'I_deliberative -> I_want_my_clothes_attain_property_clean -> my_clothes_attain_property_clean;'
				   
				   'I_avoid_my_clothes_attain_property_dirty [shape=box,style=filled,label="avoid",height=.1,width=.1] ;'
				   'I_deliberative -> I_avoid_my_clothes_attain_property_dirty -> my_clothes_attain_property_dirty;'
				   
				   
				   '// reflective'
				   [graphviz_node 'white' '"#008800"' 'filled']
				   [graphviz_edge '"#008800"']
				   'I_reflective [label = "I\\n(reflective)"];'
				   
				   
				   'I_focus_on_I_want_my_clothes_attain_property_clean [shape=box,style=filled,label="focus-on",height=.1,width=.1] ;'
				   'I_reflective -> I_focus_on_I_want_my_clothes_attain_property_clean -> I_want_my_clothes_attain_property_clean;'
				   
				   'I_ignore_I_want_my_clothes_attain_property_clean [shape=box,style=filled,label="ignore",height=.1,width=.1] ;'
				   'I_reflective -> I_ignore_I_want_my_clothes_attain_property_clean -> I_want_my_clothes_attain_property_clean;'
				   
				   'I_focus_on_I_avoid_my_clothes_attain_property_dirty [shape=box,style=filled,label="focus-on",height=.1,width=.1] ;'
				   'I_reflective -> I_focus_on_I_avoid_my_clothes_attain_property_dirty -> I_avoid_my_clothes_attain_property_dirty;'
				   
				   'I_ignore_I_avoid_my_clothes_attain_property_dirty [shape=box,style=filled,label="ignore",height=.1,width=.1] ;'
				   'I_reflective -> I_ignore_I_avoid_my_clothes_attain_property_dirty -> I_avoid_my_clothes_attain_property_dirty;'
				   
				   
				   '// self-reflective'
				   [graphviz_node 'white' '"#CC0000"' 'filled']
				   [graphviz_edge '"#CC0000"']
				   'I_self_reflective [label = "I\\n(self-reflective)"];'
				   
				   
				   'I_would_focus_on_I_want_my_clothes_attain_the_property_clean [shape=box,style=filled,label="would",height=.1,width=.1] ;'
				   'I_self_reflective -> I_would_focus_on_I_want_my_clothes_attain_the_property_clean -> I_focus_on_I_want_my_clothes_attain_property_clean;'
				   
				   'I_would_not_focus_on_I_want_my_clothes_attain_the_property_clean [shape=box,style=filled,label="would-not",height=.1,width=.1] ;'
				   'I_self_reflective -> I_would_not_focus_on_I_want_my_clothes_attain_the_property_clean -> I_focus_on_I_want_my_clothes_attain_property_clean;'
				   
				   'I_would_focus_on_I_avoid_my_clothes_attain_the_property_dirty [shape=box,style=filled,label="would",height=.1,width=.1] ;'
				   'I_self_reflective -> I_would_focus_on_I_avoid_my_clothes_attain_the_property_dirty -> I_focus_on_I_avoid_my_clothes_attain_property_dirty;'
				   
				   'I_would_not_focus_on_I_avoid_my_clothes_attain_the_property_dirty [shape=box,style=filled,label="would-not",height=.1,width=.1] ;'
				   'I_self_reflective -> I_would_not_focus_on_I_avoid_my_clothes_attain_the_property_dirty -> I_focus_on_I_avoid_my_clothes_attain_property_dirty;'
				   
				   
				   '// self-conscious'
				   [graphviz_node 'white' '"#CC00CC"' 'filled']
				   [graphviz_edge '"#CC00CC"']
				   'Mother [label = "My mother\\n(self-conscious)"]; '
				   
				   
				   'Mother_praise_I_would_focus_on_I_want_my_clothes_attain_the_property_clean [shape=box,style=filled,label="praise",height=.1,width=.1] ;'
				   'Mother -> Mother_praise_I_would_focus_on_I_want_my_clothes_attain_the_property_clean -> I_would_focus_on_I_want_my_clothes_attain_the_property_clean;'
				   
				   'Mother_scold_I_would_not_focus_on_I_want_my_clothes_attain_the_property_clean [shape=box,style=filled,label="scold",height=.1,width=.1] ;'
				   'Mother -> Mother_scold_I_would_not_focus_on_I_want_my_clothes_attain_the_property_clean -> I_would_not_focus_on_I_want_my_clothes_attain_the_property_clean;'
				   
				   'Mother_praise_I_would_focus_on_I_avoid_my_clothes_attain_the_property_dirty [shape=box,style=filled,label="praise",height=.1,width=.1] ;'
				   'Mother -> Mother_praise_I_would_focus_on_I_avoid_my_clothes_attain_the_property_dirty -> I_would_focus_on_I_avoid_my_clothes_attain_the_property_dirty;'
				   
				   'Mother_scold_I_would_not_focus_on_I_avoid_my_clothes_attain_the_property_dirty [shape=box,style=filled,label="scold",height=.1,width=.1] ;'
				   'Mother -> Mother_scold_I_would_not_focus_on_I_avoid_my_clothes_attain_the_property_dirty -> I_would_not_focus_on_I_avoid_my_clothes_attain_the_property_dirty;'
				   
				   ]]]
    model_6]]

