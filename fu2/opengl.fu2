' 
 Copyright (c) 2007-2008 Bo Morgan.
 All rights reserved.
 
 Author: Bo Morgan
 
 Permission to use, copy, modify and distribute this software and its
 documentation is hereby granted, provided that both the copyright
 notice and this permission notice appear in all copies of the
 software, derivative works or modified versions, and any portions
 thereof, and that both notices appear in supporting documentation.
 
 BO MORGAN ALLOWS FREE USE OF THIS SOFTWARE IN ITS "AS IS" CONDITION.
 BO MORGAN DISCLAIMS ANY LIABILITY OF ANY KIND FOR ANY DAMAGES
 WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
 
 Bo Morgan requests users of this software to return to bo@mit.edu any
 improvements or extensions that they make and grant Bo Morgan the
 rights to redistribute these changes.
'

[globalize -gmodule-opengl- nil]

[defunk opengl-init_library []
  [if [null -gmodule-opengl-]
      [prog [= -gmodule-opengl- [gmodule-open [gmodule-build_path '/usr/X11R6/lib64' 'GL'] 0]]
	    [if [null -gmodule-opengl-] [error `loading-gmodule 'loading opengl dynamic library']]]]]

[defunk-alien -gmodule-opengl- gl_begin            nil     'glBegin'          [[integer type]]]
[defunk-alien -gmodule-opengl- gl_end              nil     'glEnd'            []]
[defunk-alien -gmodule-opengl- gl_color_4f         nil     'glColor4f'        [[float red] [float green] [float blue] [float alpha]]]
[defunk-alien -gmodule-opengl- gl_clear_stencil    nil     'glClearStencil'   [[integer value_bits]]]
[defunk-alien -gmodule-opengl- gl_clear_color      nil     'glClearColor'     [[float red] [float green] [float blue] [float alpha]]]
[defunk-alien -gmodule-opengl- gl_clear            nil     'glClear'          [[integer plane_bits]]]
[defunk-alien -gmodule-opengl- gl_clear_depth      nil     'glClearDepth'     [[double depth_value]]]
[defunk-alien -gmodule-opengl- gl_read_buffer      nil     'glReadBuffer'     [[integer buffer]]]
[defunk-alien -gmodule-opengl- gl_pixel_store_i    nil     'glPixelStorei'    [[integer flags] [integer value]]]
[defunk-alien -gmodule-opengl- gl_pixel_transfer_f nil     'glPixelTransferf' [[integer flags] [integer value]]]
[defunk-alien -gmodule-opengl- gl_read_pixels      nil     'glReadPixels'     [[integer left] [integer bottom] [integer width] [integer height] [integer component] [integer type] [integer buffer]]]
[defunk-alien -gmodule-opengl- gl_material_fv      nil     'glMaterialfv'     [[integer surface_flags] [integer illumination_type] [integer data]]]
[defunk-alien -gmodule-opengl- gl_material_f       nil     'glMaterialf'      [[integer surface_flags] [integer illumination_type] [float value]]]
[defunk-alien -gmodule-opengl- gl_front_face       nil     'glFrontFace'      [[integer direction_flag]]]
[defunk-alien -gmodule-opengl- gl_cull_face_side   nil     'glCullFace'       [[integer face_flag]]]
[defunk-alien -gmodule-opengl- gl_disable          nil     'glDisable'        [[integer mode]]]
[defunk-alien -gmodule-opengl- gl_shade_model      nil     'glShadeModel'     [[integer shade_model_flag]]]
[defunk-alien -gmodule-opengl- gl_push_matrix      nil     'glPushMatrix'     []]
[defunk-alien -gmodule-opengl- gl_mult_matrix_f    nil     'glMultMatrixf'    [[integer matrix]]]
[defunk-alien -gmodule-opengl- gl_translate_f      nil     'glTranslatef'     [[float x] [float y] [float z]]]
[defunk-alien -gmodule-opengl- gl_rotate_f         nil     'glRotatef'        [[float a] [float x] [float y] [float z]]]
[defunk-alien -gmodule-opengl- gl_normal_3d        nil     'glNormal3d'       [[double x] [double y] [double z]]]
[defunk-alien -gmodule-opengl- gl_normal_3f        nil     'glNormal3f'       [[float x] [float y] [float z]]]
[defunk-alien -gmodule-opengl- gl_vertex_3d        nil     'glVertex3d'       [[double x] [double y] [double z]]]
[defunk-alien -gmodule-opengl- gl_vertex_3f        nil     'glVertex3f'       [[float x] [float y] [float z]]]
[defunk-alien -gmodule-opengl- gl_gen_lists        integer 'glGenLists'       [[integer list_num]]]
[defunk-alien -gmodule-opengl- gl_new_list         nil     'glNewList'        [[integer list_id] [integer flags]]]
[defunk-alien -gmodule-opengl- gl_end_list         nil     'glEndList'        []]
[defunk-alien -gmodule-opengl- gl_call_list        nil     'glCallList'       [[integer list_id]]]
[defunk-alien -gmodule-opengl- gl_tex_coord_2f     nil     'glTexCoord2f'     [[float x] [float y]]]
[defunk-alien -gmodule-opengl- gl_vertex_3fv       nil     'glVertex3fv'      [[integer vertex]]]
[defunk-alien -gmodule-opengl- gl_vertex_3dv       nil     'glVertex3dv'      [[integer vertex]]]
[defunk-alien -gmodule-opengl- gl_pop_matrix       nil     'glPopMatrix'      []]
[defunk-alien -gmodule-opengl- gl_enable           nil     'glEnable'         [[integer mode]]]
[defunk-alien -gmodule-opengl- gl_scale_d          nil     'glScaled'         [[double x] [double y] [double z]]]
[defunk-alien -gmodule-opengl- gl_scale_f          nil     'glScalef'         [[float x] [float y] [float z]]]
[defunk-alien -gmodule-opengl- gl_viewport         nil     'glViewport'       [[integer left] [integer bottom] [integer width] [integer height]]]
[defunk-alien -gmodule-opengl- gl_scissor          nil     'glScissor'        [[integer left] [integer bottom] [integer width] [integer height]]]
[defunk-alien -gmodule-opengl- gl_matrix_mode      nil     'glMatrixMode'     [[integer mode]]]
[defunk-alien -gmodule-opengl- gl_load_identity    nil     'glLoadIdentity'   []]
[defunk-alien -gmodule-opengl- gl_light_fv         nil     'glLightfv'        [[integer light_id] [integer light_attribute] [integer data]]]
[defunk-alien -gmodule-opengl- gl_gen_textures     nil     'glGenTextures'    [[integer num] [integer texture_array]]]
[defunk-alien -gmodule-opengl- gl_bind_texture     nil     'glBindTexture'    [[integer texture_mode] [integer texture_id]]]
[defunk-alien -gmodule-opengl- gl_tex_parameteri   nil     'glTexParameteri'  [[integer target] [integer param_name] [integer param]]]
[defunk-alien -gmodule-opengl- gl_blend_func       nil     'glBlendFunc'      [[integer src_factor] [integer dest_factor]]]
[defunk-alien -gmodule-opengl- gl_depth_func       nil     'glDepthFunc'      [[integer func]]]
[defunk-alien -gmodule-opengl- gl_depth_range      nil     'glDepthRange'     [[double near_z] [double far_z]]]
[defunk-alien -gmodule-opengl- gl_tex_image_2d     nil     'glTexImage2D'     [[integer target] [integer level] [integer internal_format] [integer width] [integer height] [integer border] [integer format] [integer type] [integer pixel_data]]]

