
[defunk reactive-test []
  [let [[debug nil]]
    [let [[physical_fiber [fiber [funk []
				       [while t
					 [sleep 1]
					 [= debug [cons 'physical fiber here.' debug]]]]
				 []]]
	  [reactive_fiber [fiber [funk []
				       [while t
					 [sleep 1]
					 [= debug [cons 'reactive fiber here.' debug]]]]
				 []]]]
      [let [[done nil]]
	[while [not done]
	  [format stdout '\nreactive-test: ']
	  [let [[read_exp [read]]]
	    [cond [[eq read_exp `exit]  [= done `t]]
		  [[eq read_exp `debug] [prog [format stdout '\ndebug out: ']
					      [mapc [funk [x] [format stdout '\n  ' x]]
						    [conslist-first_n debug 10]]]]
		  [t                    [format stdout '\nreactive-test out: ' [eval read_exp]]]]]]
	[format stdout '\nreactive-test done.\n']
	nil]]]]


	      