
[defunk frame-add [this var value]
  [frame-add_var_value this var value]]

[defunk frame-push [this var value]
  [frame-add_var_value this var [cons value [frame-lookup_var_value this var nil]]]]

[defunk frame-get [this var]
  [frame-lookup_var_value this var nil]]

[defmetro defobject [symbol english]
  [format stdout '\ndefobject symbol=' symbol ' english=' english]
  `[prog [globalize ,symbol [frame-new]]
	 [frame-push ,symbol `symbol [quote ,symbol]]
	 [frame-push ,symbol `english ,english]]]

[defmetro defrelation [symbol obj1 type obj2 english]
  [format stdout '\ndefrelation symbol=' symbol ' obj1=' obj1 ' type=' type ' obj2=' obj2]
  `[let [[obj1 ,obj1]
	 [obj2 ,obj2]]
     [globalize ,symbol [frame-new]]
     [frame-push ,symbol `type [quote ,type]]
     [frame-push ,symbol `obj1 obj1]
     [frame-push ,symbol `obj2 obj2]
     [frame-push ,symbol `english ,english]
     [frame-push obj1 [quote ,type] obj2]]]



[globalize carol [frame-new]]

[defobject my_clothes 'my clothes']
[frame-push carol `my_clothes my_clothes]

[defobject clean 'clean']
[frame-push carol `clean clean]

[defrelation my_clothes-become-clean my_clothes become clean 'my clothes become clean']
[frame-push carol `my_clothes-become-clean my_clothes-become-clean]


